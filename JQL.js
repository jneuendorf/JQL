// Generated by CoffeeScript 1.9.1
(function() {
  var JQL, arrEquals, arrUnique, cloneObject, getSelf, padNum, toArr,
    slice = [].slice,
    indexOf = [].indexOf || function(item) { for (var i = 0, l = this.length; i < l; i++) { if (i in this && this[i] === item) return i; } return -1; };

  window.bigJSON = [
    {
      "id": 375,
      "date": "2012-01-01",
      "value": 95800,
      "created_at": "2013-06-06 15:24:35",
      "updated_at": "2014-01-06 17:36:02",
      "detail_html": null,
      "detail_pic": null,
      "kpi_report_id": 1,
      "raw_row_number": null
    }, {
      "id": 376,
      "date": "2012-02-01",
      "value": 90568,
      "created_at": "2013-06-06 15:24:35",
      "updated_at": "2014-01-06 17:36:02",
      "detail_html": null,
      "detail_pic": null,
      "kpi_report_id": 1,
      "raw_row_number": null
    }, {
      "id": 377,
      "date": "2012-03-01",
      "value": 94829,
      "created_at": "2013-06-06 15:24:35",
      "updated_at": "2014-01-06 17:36:02",
      "detail_html": null,
      "detail_pic": null,
      "kpi_report_id": 1,
      "raw_row_number": null
    }, {
      "id": 378,
      "date": "2012-04-01",
      "value": 83692,
      "created_at": "2013-06-06 15:24:35",
      "updated_at": "2014-01-06 17:36:02",
      "detail_html": null,
      "detail_pic": null,
      "kpi_report_id": 1,
      "raw_row_number": null
    }, {
      "id": 379,
      "date": "2012-05-01",
      "value": 85402,
      "created_at": "2013-06-06 15:24:35",
      "updated_at": "2014-01-06 17:36:02",
      "detail_html": null,
      "detail_pic": null,
      "kpi_report_id": 1,
      "raw_row_number": null
    }, {
      "id": 380,
      "date": "2012-06-01",
      "value": 84144,
      "created_at": "2013-06-06 15:24:35",
      "updated_at": "2014-01-06 17:36:02",
      "detail_html": "<div />",
      "detail_pic": "base64",
      "kpi_report_id": 1,
      "raw_row_number": 123
    }, {
      "id": 381,
      "date": "2012-07-01",
      "value": 88975,
      "created_at": "2013-06-06 15:24:35",
      "updated_at": "2014-01-06 17:36:02",
      "detail_html": null,
      "detail_pic": null,
      "kpi_report_id": 1,
      "raw_row_number": null
    }, {
      "id": 382,
      "date": "2012-08-01",
      "value": 92002,
      "created_at": "2013-06-06 15:24:35",
      "updated_at": "2014-01-06 17:36:02",
      "detail_html": null,
      "detail_pic": null,
      "kpi_report_id": 1,
      "raw_row_number": null
    }, {
      "id": 383,
      "date": "2012-09-01",
      "value": 93298,
      "created_at": "2013-06-06 15:24:35",
      "updated_at": "2014-01-06 17:36:02",
      "detail_html": null,
      "detail_pic": null,
      "kpi_report_id": 1,
      "raw_row_number": null
    }, {
      "id": 384,
      "date": "2012-10-01",
      "value": 98289,
      "created_at": "2013-06-06 15:24:35",
      "updated_at": "2014-01-06 17:36:02",
      "detail_html": null,
      "detail_pic": null,
      "kpi_report_id": 1,
      "raw_row_number": null
    }, {
      "id": 385,
      "date": "2012-11-01",
      "value": 95814,
      "created_at": "2013-06-06 15:24:35",
      "updated_at": "2014-01-06 17:36:02",
      "detail_html": null,
      "detail_pic": null,
      "kpi_report_id": 1,
      "raw_row_number": null
    }, {
      "id": 386,
      "date": "2012-12-01",
      "value": 71892,
      "created_at": "2013-06-06 15:24:35",
      "updated_at": "2014-01-06 17:36:02",
      "detail_html": null,
      "detail_pic": null,
      "kpi_report_id": 1,
      "raw_row_number": null
    }, {
      "id": 387,
      "date": "2013-01-01",
      "value": 105012,
      "created_at": "2013-06-06 15:24:35",
      "updated_at": "2014-01-06 17:36:02",
      "detail_html": null,
      "detail_pic": null,
      "kpi_report_id": 1,
      "raw_row_number": null
    }, {
      "id": 388,
      "date": "2013-02-01",
      "value": 99157,
      "created_at": "2013-06-06 15:24:35",
      "updated_at": "2014-01-06 17:36:02",
      "detail_html": null,
      "detail_pic": null,
      "kpi_report_id": 1,
      "raw_row_number": null
    }, {
      "id": 389,
      "date": "2013-03-01",
      "value": 104148,
      "created_at": "2013-06-06 15:24:35",
      "updated_at": "2014-01-06 17:36:02",
      "detail_html": null,
      "detail_pic": null,
      "kpi_report_id": 1,
      "raw_row_number": null
    }, {
      "id": 390,
      "date": "2012-01-01",
      "value": 2137230,
      "created_at": "2013-06-06 15:24:35",
      "updated_at": "2014-01-06 17:36:02",
      "detail_html": null,
      "detail_pic": null,
      "kpi_report_id": 2,
      "raw_row_number": null
    }, {
      "id": 391,
      "date": "2012-02-01",
      "value": 1994510,
      "created_at": "2013-06-06 15:24:35",
      "updated_at": "2014-01-06 17:36:02",
      "detail_html": null,
      "detail_pic": null,
      "kpi_report_id": 2,
      "raw_row_number": null
    }, {
      "id": 392,
      "date": "2012-03-01",
      "value": 2088190,
      "created_at": "2013-06-06 15:24:35",
      "updated_at": "2014-01-06 17:36:02",
      "detail_html": null,
      "detail_pic": null,
      "kpi_report_id": 2,
      "raw_row_number": null
    }, {
      "id": 393,
      "date": "2012-04-01",
      "value": 1880040,
      "created_at": "2013-06-06 15:24:35",
      "updated_at": "2014-01-06 17:36:02",
      "detail_html": null,
      "detail_pic": null,
      "kpi_report_id": 2,
      "raw_row_number": null
    }, {
      "id": 394,
      "date": "2012-05-01",
      "value": 1943740,
      "created_at": "2013-06-06 15:24:35",
      "updated_at": "2014-01-06 17:36:02",
      "detail_html": null,
      "detail_pic": null,
      "kpi_report_id": 2,
      "raw_row_number": null
    }, {
      "id": 395,
      "date": "2012-06-01",
      "value": 1890480,
      "created_at": "2013-06-06 15:24:35",
      "updated_at": "2014-01-06 17:36:02",
      "detail_html": null,
      "detail_pic": null,
      "kpi_report_id": 2,
      "raw_row_number": null
    }, {
      "id": 396,
      "date": "2012-07-01",
      "value": 1969760,
      "created_at": "2013-06-06 15:24:35",
      "updated_at": "2014-01-06 17:36:02",
      "detail_html": null,
      "detail_pic": null,
      "kpi_report_id": 2,
      "raw_row_number": null
    }, {
      "id": 397,
      "date": "2012-08-01",
      "value": 1941980,
      "created_at": "2013-06-06 15:24:35",
      "updated_at": "2014-01-06 17:36:02",
      "detail_html": null,
      "detail_pic": null,
      "kpi_report_id": 2,
      "raw_row_number": null
    }, {
      "id": 398,
      "date": "2012-09-01",
      "value": 1866550,
      "created_at": "2013-06-06 15:24:36",
      "updated_at": "2014-01-06 17:36:02",
      "detail_html": null,
      "detail_pic": null,
      "kpi_report_id": 2,
      "raw_row_number": null
    }, {
      "id": 399,
      "date": "2012-10-01",
      "value": 1997010,
      "created_at": "2013-06-06 15:24:36",
      "updated_at": "2014-01-06 17:36:02",
      "detail_html": null,
      "detail_pic": null,
      "kpi_report_id": 2,
      "raw_row_number": null
    }, {
      "id": 400,
      "date": "2012-11-01",
      "value": 1973510,
      "created_at": "2013-06-06 15:24:36",
      "updated_at": "2014-01-06 17:36:02",
      "detail_html": null,
      "detail_pic": null,
      "kpi_report_id": 2,
      "raw_row_number": null
    }, {
      "id": 401,
      "date": "2012-12-01",
      "value": 1833640,
      "created_at": "2013-06-06 15:24:36",
      "updated_at": "2014-01-06 17:36:02",
      "detail_html": null,
      "detail_pic": null,
      "kpi_report_id": 2,
      "raw_row_number": null
    }, {
      "id": 402,
      "date": "2013-01-01",
      "value": 2179520,
      "created_at": "2013-06-06 15:24:36",
      "updated_at": "2014-01-06 17:36:02",
      "detail_html": null,
      "detail_pic": null,
      "kpi_report_id": 2,
      "raw_row_number": null
    }, {
      "id": 403,
      "date": "2013-02-01",
      "value": 1891960,
      "created_at": "2013-06-06 15:24:36",
      "updated_at": "2014-01-06 17:36:02",
      "detail_html": null,
      "detail_pic": null,
      "kpi_report_id": 2,
      "raw_row_number": null
    }, {
      "id": 404,
      "date": "2013-03-01",
      "value": 1943720,
      "created_at": "2013-06-06 15:24:36",
      "updated_at": "2014-01-06 17:36:03",
      "detail_html": null,
      "detail_pic": null,
      "kpi_report_id": 2,
      "raw_row_number": null
    }, {
      "id": 405,
      "date": "2012-01-01",
      "value": 101680,
      "created_at": "2013-06-06 15:24:36",
      "updated_at": "2014-01-06 17:36:03",
      "detail_html": null,
      "detail_pic": null,
      "kpi_report_id": 3,
      "raw_row_number": null
    }, {
      "id": 406,
      "date": "2012-02-01",
      "value": 100299,
      "created_at": "2013-06-06 15:24:36",
      "updated_at": "2014-01-06 17:36:03",
      "detail_html": null,
      "detail_pic": null,
      "kpi_report_id": 3,
      "raw_row_number": null
    }, {
      "id": 407,
      "date": "2012-03-01",
      "value": 113158,
      "created_at": "2013-06-06 15:24:36",
      "updated_at": "2014-01-06 17:36:03",
      "detail_html": null,
      "detail_pic": null,
      "kpi_report_id": 3,
      "raw_row_number": null
    }, {
      "id": 408,
      "date": "2012-04-01",
      "value": 100641,
      "created_at": "2013-06-06 15:24:36",
      "updated_at": "2014-01-06 17:36:03",
      "detail_html": null,
      "detail_pic": null,
      "kpi_report_id": 3,
      "raw_row_number": null
    }, {
      "id": 409,
      "date": "2012-05-01",
      "value": 103964,
      "created_at": "2013-06-06 15:24:36",
      "updated_at": "2014-01-06 17:36:03",
      "detail_html": null,
      "detail_pic": null,
      "kpi_report_id": 3,
      "raw_row_number": null
    }, {
      "id": 410,
      "date": "2012-06-01",
      "value": 100721,
      "created_at": "2013-06-06 15:24:36",
      "updated_at": "2014-01-06 17:36:03",
      "detail_html": null,
      "detail_pic": null,
      "kpi_report_id": 3,
      "raw_row_number": null
    }, {
      "id": 411,
      "date": "2012-07-01",
      "value": 106242,
      "created_at": "2013-06-06 15:24:36",
      "updated_at": "2014-01-06 17:36:03",
      "detail_html": null,
      "detail_pic": null,
      "kpi_report_id": 3,
      "raw_row_number": null
    }, {
      "id": 412,
      "date": "2012-08-01",
      "value": 105065,
      "created_at": "2013-06-06 15:24:36",
      "updated_at": "2014-01-06 17:36:03",
      "detail_html": null,
      "detail_pic": null,
      "kpi_report_id": 3,
      "raw_row_number": null
    }, {
      "id": 413,
      "date": "2012-09-01",
      "value": 109116,
      "created_at": "2013-06-06 15:24:36",
      "updated_at": "2014-01-06 17:36:03",
      "detail_html": null,
      "detail_pic": null,
      "kpi_report_id": 3,
      "raw_row_number": null
    }, {
      "id": 414,
      "date": "2012-10-01",
      "value": 131541,
      "created_at": "2013-06-06 15:24:36",
      "updated_at": "2014-01-06 17:36:03",
      "detail_html": null,
      "detail_pic": null,
      "kpi_report_id": 3,
      "raw_row_number": null
    }, {
      "id": 415,
      "date": "2012-11-01",
      "value": 123056,
      "created_at": "2013-06-06 15:24:36",
      "updated_at": "2014-01-06 17:36:03",
      "detail_html": null,
      "detail_pic": null,
      "kpi_report_id": 3,
      "raw_row_number": null
    }, {
      "id": 416,
      "date": "2012-12-01",
      "value": 102272,
      "created_at": "2013-06-06 15:24:36",
      "updated_at": "2014-01-06 17:36:03",
      "detail_html": null,
      "detail_pic": null,
      "kpi_report_id": 3,
      "raw_row_number": null
    }, {
      "id": 417,
      "date": "2013-01-01",
      "value": 59756,
      "created_at": "2013-06-06 15:24:36",
      "updated_at": "2014-01-06 17:36:03",
      "detail_html": null,
      "detail_pic": null,
      "kpi_report_id": 3,
      "raw_row_number": null
    }, {
      "id": 418,
      "date": "2013-02-01",
      "value": 54629,
      "created_at": "2013-06-06 15:24:36",
      "updated_at": "2014-01-06 17:36:03",
      "detail_html": null,
      "detail_pic": null,
      "kpi_report_id": 3,
      "raw_row_number": null
    }, {
      "id": 419,
      "date": "2013-03-01",
      "value": 60220,
      "created_at": "2013-06-06 15:24:36",
      "updated_at": "2014-01-06 17:36:03",
      "detail_html": null,
      "detail_pic": null,
      "kpi_report_id": 3,
      "raw_row_number": null
    }, {
      "id": 420,
      "date": "2012-01-01",
      "value": 254824,
      "created_at": "2013-06-06 15:24:36",
      "updated_at": "2014-01-06 17:36:03",
      "detail_html": null,
      "detail_pic": null,
      "kpi_report_id": 4,
      "raw_row_number": null
    }, {
      "id": 421,
      "date": "2012-02-01",
      "value": 238424,
      "created_at": "2013-06-06 15:24:36",
      "updated_at": "2014-01-06 17:36:03",
      "detail_html": null,
      "detail_pic": null,
      "kpi_report_id": 4,
      "raw_row_number": null
    }, {
      "id": 422,
      "date": "2012-03-01",
      "value": 274477,
      "created_at": "2013-06-06 15:24:36",
      "updated_at": "2014-01-06 17:36:03",
      "detail_html": null,
      "detail_pic": null,
      "kpi_report_id": 4,
      "raw_row_number": null
    }, {
      "id": 423,
      "date": "2012-04-01",
      "value": 236173,
      "created_at": "2013-06-06 15:24:36",
      "updated_at": "2014-01-06 17:36:03",
      "detail_html": null,
      "detail_pic": null,
      "kpi_report_id": 4,
      "raw_row_number": null
    }, {
      "id": 424,
      "date": "2012-05-01",
      "value": 240439,
      "created_at": "2013-06-06 15:24:36",
      "updated_at": "2014-01-06 17:36:03",
      "detail_html": null,
      "detail_pic": null,
      "kpi_report_id": 4,
      "raw_row_number": null
    }, {
      "id": 425,
      "date": "2012-06-01",
      "value": 205974,
      "created_at": "2013-06-06 15:24:36",
      "updated_at": "2014-01-06 17:36:03",
      "detail_html": null,
      "detail_pic": null,
      "kpi_report_id": 4,
      "raw_row_number": null
    }, {
      "id": 426,
      "date": "2012-07-01",
      "value": 227471,
      "created_at": "2013-06-06 15:24:37",
      "updated_at": "2014-01-06 17:36:03",
      "detail_html": null,
      "detail_pic": null,
      "kpi_report_id": 4,
      "raw_row_number": null
    }, {
      "id": 427,
      "date": "2012-08-01",
      "value": 218457,
      "created_at": "2013-06-06 15:24:37",
      "updated_at": "2014-01-06 17:36:03",
      "detail_html": null,
      "detail_pic": null,
      "kpi_report_id": 4,
      "raw_row_number": null
    }, {
      "id": 428,
      "date": "2012-09-01",
      "value": 231957,
      "created_at": "2013-06-06 15:24:37",
      "updated_at": "2014-01-06 17:36:03",
      "detail_html": null,
      "detail_pic": null,
      "kpi_report_id": 4,
      "raw_row_number": null
    }, {
      "id": 429,
      "date": "2012-10-01",
      "value": 257319,
      "created_at": "2013-06-06 15:24:37",
      "updated_at": "2014-01-06 17:36:03",
      "detail_html": null,
      "detail_pic": null,
      "kpi_report_id": 4,
      "raw_row_number": null
    }, {
      "id": 430,
      "date": "2012-11-01",
      "value": 263700,
      "created_at": "2013-06-06 15:24:37",
      "updated_at": "2014-01-06 17:36:03",
      "detail_html": null,
      "detail_pic": null,
      "kpi_report_id": 4,
      "raw_row_number": null
    }, {
      "id": 431,
      "date": "2012-12-01",
      "value": 266847,
      "created_at": "2013-06-06 15:24:37",
      "updated_at": "2014-01-06 17:36:03",
      "detail_html": null,
      "detail_pic": null,
      "kpi_report_id": 4,
      "raw_row_number": null
    }, {
      "id": 432,
      "date": "2013-01-01",
      "value": 301662,
      "created_at": "2013-06-06 15:24:37",
      "updated_at": "2014-01-06 17:36:03",
      "detail_html": null,
      "detail_pic": null,
      "kpi_report_id": 4,
      "raw_row_number": null
    }, {
      "id": 433,
      "date": "2013-02-01",
      "value": 260245,
      "created_at": "2013-06-06 15:24:37",
      "updated_at": "2014-01-06 17:36:03",
      "detail_html": null,
      "detail_pic": null,
      "kpi_report_id": 4,
      "raw_row_number": null
    }, {
      "id": 434,
      "date": "2013-03-01",
      "value": 277591,
      "created_at": "2013-06-06 15:24:37",
      "updated_at": "2014-01-06 17:36:03",
      "detail_html": null,
      "detail_pic": null,
      "kpi_report_id": 4,
      "raw_row_number": null
    }, {
      "id": 435,
      "date": "2012-01-01",
      "value": 561161,
      "created_at": "2013-06-06 15:24:37",
      "updated_at": "2014-01-06 17:36:03",
      "detail_html": null,
      "detail_pic": null,
      "kpi_report_id": 5,
      "raw_row_number": null
    }, {
      "id": 436,
      "date": "2012-02-01",
      "value": 488210,
      "created_at": "2013-06-06 15:24:37",
      "updated_at": "2014-01-06 17:36:03",
      "detail_html": null,
      "detail_pic": null,
      "kpi_report_id": 5,
      "raw_row_number": null
    }, {
      "id": 437,
      "date": "2012-03-01",
      "value": 467578,
      "created_at": "2013-06-06 15:24:37",
      "updated_at": "2014-01-06 17:36:03",
      "detail_html": null,
      "detail_pic": null,
      "kpi_report_id": 5,
      "raw_row_number": null
    }, {
      "id": 438,
      "date": "2012-04-01",
      "value": 463804,
      "created_at": "2013-06-06 15:24:37",
      "updated_at": "2014-01-06 17:36:03",
      "detail_html": null,
      "detail_pic": null,
      "kpi_report_id": 5,
      "raw_row_number": null
    }, {
      "id": 439,
      "date": "2012-05-01",
      "value": 451695,
      "created_at": "2013-06-06 15:24:37",
      "updated_at": "2014-01-06 17:36:03",
      "detail_html": null,
      "detail_pic": null,
      "kpi_report_id": 5,
      "raw_row_number": null
    }, {
      "id": 440,
      "date": "2012-06-01",
      "value": 303772,
      "created_at": "2013-06-06 15:24:37",
      "updated_at": "2014-01-06 17:36:03",
      "detail_html": null,
      "detail_pic": null,
      "kpi_report_id": 5,
      "raw_row_number": null
    }, {
      "id": 441,
      "date": "2012-07-01",
      "value": 320148,
      "created_at": "2013-06-06 15:24:37",
      "updated_at": "2014-01-06 17:36:03",
      "detail_html": null,
      "detail_pic": null,
      "kpi_report_id": 5,
      "raw_row_number": null
    }, {
      "id": 442,
      "date": "2012-08-01",
      "value": 395113,
      "created_at": "2013-06-06 15:24:37",
      "updated_at": "2014-01-06 17:36:03",
      "detail_html": null,
      "detail_pic": null,
      "kpi_report_id": 5,
      "raw_row_number": null
    }, {
      "id": 443,
      "date": "2012-09-01",
      "value": 430947,
      "created_at": "2013-06-06 15:24:37",
      "updated_at": "2014-01-06 17:36:03",
      "detail_html": null,
      "detail_pic": null,
      "kpi_report_id": 5,
      "raw_row_number": null
    }, {
      "id": 444,
      "date": "2012-10-01",
      "value": 495954,
      "created_at": "2013-06-06 15:24:37",
      "updated_at": "2014-01-06 17:36:03",
      "detail_html": null,
      "detail_pic": null,
      "kpi_report_id": 5,
      "raw_row_number": null
    }, {
      "id": 445,
      "date": "2012-11-01",
      "value": 457960,
      "created_at": "2013-06-06 15:24:37",
      "updated_at": "2014-01-06 17:36:03",
      "detail_html": null,
      "detail_pic": null,
      "kpi_report_id": 5,
      "raw_row_number": null
    }, {
      "id": 446,
      "date": "2012-12-01",
      "value": 429750,
      "created_at": "2013-06-06 15:24:37",
      "updated_at": "2014-01-06 17:36:03",
      "detail_html": null,
      "detail_pic": null,
      "kpi_report_id": 5,
      "raw_row_number": null
    }, {
      "id": 447,
      "date": "2013-01-01",
      "value": 505297,
      "created_at": "2013-06-06 15:24:37",
      "updated_at": "2014-01-06 17:36:03",
      "detail_html": null,
      "detail_pic": null,
      "kpi_report_id": 5,
      "raw_row_number": null
    }, {
      "id": 448,
      "date": "2013-02-01",
      "value": 413588,
      "created_at": "2013-06-06 15:24:37",
      "updated_at": "2014-01-06 17:36:03",
      "detail_html": null,
      "detail_pic": null,
      "kpi_report_id": 5,
      "raw_row_number": null
    }, {
      "id": 449,
      "date": "2013-03-01",
      "value": 440327,
      "created_at": "2013-06-06 15:24:37",
      "updated_at": "2014-01-06 17:36:03",
      "detail_html": null,
      "detail_pic": null,
      "kpi_report_id": 5,
      "raw_row_number": null
    }, {
      "id": 450,
      "date": "2012-01-01",
      "value": 291286,
      "created_at": "2013-06-06 15:24:37",
      "updated_at": "2014-01-06 17:36:03",
      "detail_html": null,
      "detail_pic": null,
      "kpi_report_id": 6,
      "raw_row_number": null
    }, {
      "id": 451,
      "date": "2012-02-01",
      "value": 270503,
      "created_at": "2013-06-06 15:24:37",
      "updated_at": "2014-01-06 17:36:03",
      "detail_html": null,
      "detail_pic": null,
      "kpi_report_id": 6,
      "raw_row_number": null
    }, {
      "id": 452,
      "date": "2012-03-01",
      "value": 295677,
      "created_at": "2013-06-06 15:24:37",
      "updated_at": "2014-01-06 17:36:03",
      "detail_html": null,
      "detail_pic": null,
      "kpi_report_id": 6,
      "raw_row_number": null
    }, {
      "id": 453,
      "date": "2012-04-01",
      "value": 305178,
      "created_at": "2013-06-06 15:24:38",
      "updated_at": "2014-01-06 17:36:03",
      "detail_html": null,
      "detail_pic": null,
      "kpi_report_id": 6,
      "raw_row_number": null
    }, {
      "id": 454,
      "date": "2012-05-01",
      "value": 292405,
      "created_at": "2013-06-06 15:24:38",
      "updated_at": "2014-01-06 17:36:03",
      "detail_html": null,
      "detail_pic": null,
      "kpi_report_id": 6,
      "raw_row_number": null
    }, {
      "id": 455,
      "date": "2012-06-01",
      "value": 341413,
      "created_at": "2013-06-06 15:24:38",
      "updated_at": "2014-01-06 17:36:03",
      "detail_html": null,
      "detail_pic": null,
      "kpi_report_id": 6,
      "raw_row_number": null
    }, {
      "id": 456,
      "date": "2012-07-01",
      "value": 319436,
      "created_at": "2013-06-06 15:24:38",
      "updated_at": "2014-01-06 17:36:03",
      "detail_html": null,
      "detail_pic": null,
      "kpi_report_id": 6,
      "raw_row_number": null
    }, {
      "id": 457,
      "date": "2012-08-01",
      "value": 285851,
      "created_at": "2013-06-06 15:24:38",
      "updated_at": "2014-01-06 17:36:03",
      "detail_html": null,
      "detail_pic": null,
      "kpi_report_id": 6,
      "raw_row_number": null
    }, {
      "id": 458,
      "date": "2012-09-01",
      "value": 295257,
      "created_at": "2013-06-06 15:24:38",
      "updated_at": "2014-01-06 17:36:03",
      "detail_html": null,
      "detail_pic": null,
      "kpi_report_id": 6,
      "raw_row_number": null
    }, {
      "id": 459,
      "date": "2012-10-01",
      "value": null,
      "created_at": "2013-06-06 15:24:38",
      "updated_at": "2014-01-06 17:36:03",
      "detail_html": null,
      "detail_pic": null,
      "kpi_report_id": 6,
      "raw_row_number": null
    }, {
      "id": 460,
      "date": "2012-11-01",
      "value": null,
      "created_at": "2013-06-06 15:24:38",
      "updated_at": "2014-01-06 17:36:03",
      "detail_html": null,
      "detail_pic": null,
      "kpi_report_id": 6,
      "raw_row_number": null
    }, {
      "id": 461,
      "date": "2012-12-01",
      "value": null,
      "created_at": "2013-06-06 15:24:38",
      "updated_at": "2014-01-06 17:36:03",
      "detail_html": null,
      "detail_pic": null,
      "kpi_report_id": 6,
      "raw_row_number": null
    }, {
      "id": 462,
      "date": "2012-01-01",
      "value": 243222,
      "created_at": "2013-06-06 15:24:38",
      "updated_at": "2014-01-06 17:36:03",
      "detail_html": null,
      "detail_pic": null,
      "kpi_report_id": 7,
      "raw_row_number": null
    }, {
      "id": 463,
      "date": "2012-02-01",
      "value": 230391,
      "created_at": "2013-06-06 15:24:38",
      "updated_at": "2014-01-06 17:36:03",
      "detail_html": null,
      "detail_pic": null,
      "kpi_report_id": 7,
      "raw_row_number": null
    }, {
      "id": 464,
      "date": "2012-03-01",
      "value": 239601,
      "created_at": "2013-06-06 15:24:38",
      "updated_at": "2014-01-06 17:36:03",
      "detail_html": null,
      "detail_pic": null,
      "kpi_report_id": 7,
      "raw_row_number": null
    }, {
      "id": 465,
      "date": "2012-04-01",
      "value": 206858,
      "created_at": "2013-06-06 15:24:38",
      "updated_at": "2014-01-06 17:36:03",
      "detail_html": null,
      "detail_pic": null,
      "kpi_report_id": 7,
      "raw_row_number": null
    }, {
      "id": 466,
      "date": "2012-05-01",
      "value": 199811,
      "created_at": "2013-06-06 15:24:38",
      "updated_at": "2014-01-06 17:36:03",
      "detail_html": null,
      "detail_pic": null,
      "kpi_report_id": 7,
      "raw_row_number": null
    }, {
      "id": 467,
      "date": "2012-06-01",
      "value": 177773,
      "created_at": "2013-06-06 15:24:38",
      "updated_at": "2014-01-06 17:36:03",
      "detail_html": null,
      "detail_pic": null,
      "kpi_report_id": 7,
      "raw_row_number": null
    }, {
      "id": 468,
      "date": "2012-07-01",
      "value": 183402,
      "created_at": "2013-06-06 15:24:38",
      "updated_at": "2014-01-06 17:36:03",
      "detail_html": null,
      "detail_pic": null,
      "kpi_report_id": 7,
      "raw_row_number": null
    }, {
      "id": 469,
      "date": "2012-08-01",
      "value": 189788,
      "created_at": "2013-06-06 15:24:38",
      "updated_at": "2014-01-06 17:36:03",
      "detail_html": null,
      "detail_pic": null,
      "kpi_report_id": 7,
      "raw_row_number": null
    }, {
      "id": 470,
      "date": "2012-09-01",
      "value": 189556,
      "created_at": "2013-06-06 15:24:38",
      "updated_at": "2014-01-06 17:36:03",
      "detail_html": null,
      "detail_pic": null,
      "kpi_report_id": 7,
      "raw_row_number": null
    }, {
      "id": 471,
      "date": "2012-10-01",
      "value": 210971,
      "created_at": "2013-06-06 15:24:38",
      "updated_at": "2014-01-06 17:36:03",
      "detail_html": null,
      "detail_pic": null,
      "kpi_report_id": 7,
      "raw_row_number": null
    }, {
      "id": 472,
      "date": "2012-11-01",
      "value": 245632,
      "created_at": "2013-06-06 15:24:38",
      "updated_at": "2014-01-06 17:36:03",
      "detail_html": null,
      "detail_pic": null,
      "kpi_report_id": 7,
      "raw_row_number": null
    }, {
      "id": 473,
      "date": "2012-12-01",
      "value": 186025,
      "created_at": "2013-06-06 15:24:38",
      "updated_at": "2014-01-06 17:36:03",
      "detail_html": null,
      "detail_pic": null,
      "kpi_report_id": 7,
      "raw_row_number": null
    }, {
      "id": 474,
      "date": "2013-01-01",
      "value": 256111,
      "created_at": "2013-06-06 15:24:38",
      "updated_at": "2014-01-06 17:36:03",
      "detail_html": null,
      "detail_pic": null,
      "kpi_report_id": 7,
      "raw_row_number": null
    }, {
      "id": 475,
      "date": "2013-02-01",
      "value": 235274,
      "created_at": "2013-06-06 15:24:38",
      "updated_at": "2014-01-06 17:36:03",
      "detail_html": null,
      "detail_pic": null,
      "kpi_report_id": 7,
      "raw_row_number": null
    }, {
      "id": 476,
      "date": "2013-03-01",
      "value": 230168,
      "created_at": "2013-06-06 15:24:38",
      "updated_at": "2014-01-06 17:36:03",
      "detail_html": null,
      "detail_pic": null,
      "kpi_report_id": 7,
      "raw_row_number": null
    }, {
      "id": 477,
      "date": "2012-01-01",
      "value": 140229,
      "created_at": "2013-06-06 15:24:38",
      "updated_at": "2014-01-06 17:36:03",
      "detail_html": null,
      "detail_pic": null,
      "kpi_report_id": 8,
      "raw_row_number": null
    }, {
      "id": 478,
      "date": "2012-02-01",
      "value": 131755,
      "created_at": "2013-06-06 15:24:38",
      "updated_at": "2014-01-06 17:36:03",
      "detail_html": null,
      "detail_pic": null,
      "kpi_report_id": 8,
      "raw_row_number": null
    }, {
      "id": 479,
      "date": "2012-03-01",
      "value": 152802,
      "created_at": "2013-06-06 15:24:38",
      "updated_at": "2014-01-06 17:36:03",
      "detail_html": null,
      "detail_pic": null,
      "kpi_report_id": 8,
      "raw_row_number": null
    }, {
      "id": 480,
      "date": "2012-04-01",
      "value": 132641,
      "created_at": "2013-06-06 15:24:38",
      "updated_at": "2014-01-06 17:36:03",
      "detail_html": null,
      "detail_pic": null,
      "kpi_report_id": 8,
      "raw_row_number": null
    }, {
      "id": 481,
      "date": "2012-05-01",
      "value": 129549,
      "created_at": "2013-06-06 15:24:39",
      "updated_at": "2014-01-06 17:36:03",
      "detail_html": null,
      "detail_pic": null,
      "kpi_report_id": 8,
      "raw_row_number": null
    }, {
      "id": 482,
      "date": "2012-06-01",
      "value": 127490,
      "created_at": "2013-06-06 15:24:39",
      "updated_at": "2014-01-06 17:36:03",
      "detail_html": null,
      "detail_pic": null,
      "kpi_report_id": 8,
      "raw_row_number": null
    }, {
      "id": 483,
      "date": "2012-07-01",
      "value": 132146,
      "created_at": "2013-06-06 15:24:39",
      "updated_at": "2014-01-06 17:36:03",
      "detail_html": null,
      "detail_pic": null,
      "kpi_report_id": 8,
      "raw_row_number": null
    }, {
      "id": 484,
      "date": "2012-08-01",
      "value": 139694,
      "created_at": "2013-06-06 15:24:39",
      "updated_at": "2014-01-06 17:36:03",
      "detail_html": null,
      "detail_pic": null,
      "kpi_report_id": 8,
      "raw_row_number": null
    }, {
      "id": 485,
      "date": "2012-09-01",
      "value": 145206,
      "created_at": "2013-06-06 15:24:39",
      "updated_at": "2014-01-06 17:36:03",
      "detail_html": null,
      "detail_pic": null,
      "kpi_report_id": 8,
      "raw_row_number": null
    }, {
      "id": 486,
      "date": "2012-10-01",
      "value": 149393,
      "created_at": "2013-06-06 15:24:39",
      "updated_at": "2014-01-06 17:36:03",
      "detail_html": null,
      "detail_pic": null,
      "kpi_report_id": 8,
      "raw_row_number": null
    }, {
      "id": 487,
      "date": "2012-11-01",
      "value": 151115,
      "created_at": "2013-06-06 15:24:39",
      "updated_at": "2014-01-06 17:36:03",
      "detail_html": null,
      "detail_pic": null,
      "kpi_report_id": 8,
      "raw_row_number": null
    }, {
      "id": 488,
      "date": "2012-12-01",
      "value": 128261,
      "created_at": "2013-06-06 15:24:39",
      "updated_at": "2014-01-06 17:36:03",
      "detail_html": null,
      "detail_pic": null,
      "kpi_report_id": 8,
      "raw_row_number": null
    }, {
      "id": 489,
      "date": "2013-01-01",
      "value": 163688,
      "created_at": "2013-06-06 15:24:39",
      "updated_at": "2014-01-06 17:36:03",
      "detail_html": null,
      "detail_pic": null,
      "kpi_report_id": 8,
      "raw_row_number": null
    }, {
      "id": 490,
      "date": "2013-02-01",
      "value": 145962,
      "created_at": "2013-06-06 15:24:39",
      "updated_at": "2014-01-06 17:36:04",
      "detail_html": null,
      "detail_pic": null,
      "kpi_report_id": 8,
      "raw_row_number": null
    }, {
      "id": 491,
      "date": "2013-03-01",
      "value": 160463,
      "created_at": "2013-06-06 15:24:39",
      "updated_at": "2014-01-06 17:36:04",
      "detail_html": null,
      "detail_pic": null,
      "kpi_report_id": 8,
      "raw_row_number": null
    }, {
      "id": 492,
      "date": "2012-10-01",
      "value": null,
      "created_at": "2013-06-06 15:24:39",
      "updated_at": "2014-01-06 17:36:04",
      "detail_html": null,
      "detail_pic": null,
      "kpi_report_id": 9,
      "raw_row_number": null
    }, {
      "id": 493,
      "date": "2012-11-01",
      "value": null,
      "created_at": "2013-06-06 15:24:39",
      "updated_at": "2014-01-06 17:36:04",
      "detail_html": null,
      "detail_pic": null,
      "kpi_report_id": 9,
      "raw_row_number": null
    }, {
      "id": 494,
      "date": "2012-12-01",
      "value": null,
      "created_at": "2013-06-06 15:24:39",
      "updated_at": "2014-01-06 17:36:04",
      "detail_html": null,
      "detail_pic": null,
      "kpi_report_id": 9,
      "raw_row_number": null
    }, {
      "id": 495,
      "date": "2013-01-01",
      "value": 71582,
      "created_at": "2013-06-06 15:24:39",
      "updated_at": "2014-01-06 17:36:04",
      "detail_html": null,
      "detail_pic": null,
      "kpi_report_id": 9,
      "raw_row_number": null
    }, {
      "id": 496,
      "date": "2013-02-01",
      "value": 70702,
      "created_at": "2013-06-06 15:24:39",
      "updated_at": "2014-01-06 17:36:04",
      "detail_html": null,
      "detail_pic": null,
      "kpi_report_id": 9,
      "raw_row_number": null
    }, {
      "id": 497,
      "date": "2013-03-01",
      "value": 87478,
      "created_at": "2013-06-06 15:24:39",
      "updated_at": "2014-01-06 17:36:04",
      "detail_html": null,
      "detail_pic": null,
      "kpi_report_id": 9,
      "raw_row_number": null
    }, {
      "id": 498,
      "date": "2012-01-01",
      "value": 205280,
      "created_at": "2013-06-06 15:24:39",
      "updated_at": "2014-01-06 17:36:04",
      "detail_html": null,
      "detail_pic": null,
      "kpi_report_id": 10,
      "raw_row_number": null
    }, {
      "id": 499,
      "date": "2012-02-01",
      "value": 169835,
      "created_at": "2013-06-06 15:24:39",
      "updated_at": "2014-01-06 17:36:04",
      "detail_html": null,
      "detail_pic": null,
      "kpi_report_id": 10,
      "raw_row_number": null
    }, {
      "id": 500,
      "date": "2012-03-01",
      "value": 179156,
      "created_at": "2013-06-06 15:24:39",
      "updated_at": "2014-01-06 17:36:04",
      "detail_html": null,
      "detail_pic": null,
      "kpi_report_id": 10,
      "raw_row_number": null
    }, {
      "id": 501,
      "date": "2012-04-01",
      "value": 146987,
      "created_at": "2013-06-06 15:24:40",
      "updated_at": "2014-01-06 17:36:04",
      "detail_html": null,
      "detail_pic": null,
      "kpi_report_id": 10,
      "raw_row_number": null
    }, {
      "id": 502,
      "date": "2012-05-01",
      "value": 97782,
      "created_at": "2013-06-06 15:24:40",
      "updated_at": "2014-01-06 17:36:04",
      "detail_html": null,
      "detail_pic": null,
      "kpi_report_id": 10,
      "raw_row_number": null
    }, {
      "id": 503,
      "date": "2012-06-01",
      "value": 102052,
      "created_at": "2013-06-06 15:24:40",
      "updated_at": "2014-01-06 17:36:04",
      "detail_html": null,
      "detail_pic": null,
      "kpi_report_id": 10,
      "raw_row_number": null
    }, {
      "id": 504,
      "date": "2012-07-01",
      "value": 81165,
      "created_at": "2013-06-06 15:24:40",
      "updated_at": "2014-01-06 17:36:04",
      "detail_html": null,
      "detail_pic": null,
      "kpi_report_id": 10,
      "raw_row_number": null
    }, {
      "id": 505,
      "date": "2012-08-01",
      "value": 116075,
      "created_at": "2013-06-06 15:24:40",
      "updated_at": "2014-01-06 17:36:04",
      "detail_html": null,
      "detail_pic": null,
      "kpi_report_id": 10,
      "raw_row_number": null
    }, {
      "id": 506,
      "date": "2012-09-01",
      "value": 155114,
      "created_at": "2013-06-06 15:24:40",
      "updated_at": "2014-01-06 17:36:04",
      "detail_html": null,
      "detail_pic": null,
      "kpi_report_id": 10,
      "raw_row_number": null
    }, {
      "id": 507,
      "date": "2012-10-01",
      "value": 121536,
      "created_at": "2013-06-06 15:24:40",
      "updated_at": "2014-01-06 17:36:04",
      "detail_html": null,
      "detail_pic": null,
      "kpi_report_id": 10,
      "raw_row_number": null
    }, {
      "id": 508,
      "date": "2012-11-01",
      "value": 116637,
      "created_at": "2013-06-06 15:24:40",
      "updated_at": "2014-01-06 17:36:04",
      "detail_html": null,
      "detail_pic": null,
      "kpi_report_id": 10,
      "raw_row_number": null
    }, {
      "id": 509,
      "date": "2012-12-01",
      "value": 92127,
      "created_at": "2013-06-06 15:24:40",
      "updated_at": "2014-01-06 17:36:04",
      "detail_html": null,
      "detail_pic": null,
      "kpi_report_id": 10,
      "raw_row_number": null
    }, {
      "id": 510,
      "date": "2013-01-01",
      "value": 196973,
      "created_at": "2013-06-06 15:24:40",
      "updated_at": "2014-01-06 17:36:04",
      "detail_html": null,
      "detail_pic": null,
      "kpi_report_id": 10,
      "raw_row_number": null
    }, {
      "id": 511,
      "date": "2013-02-01",
      "value": 152356,
      "created_at": "2013-06-06 15:24:40",
      "updated_at": "2014-01-06 17:36:04",
      "detail_html": null,
      "detail_pic": null,
      "kpi_report_id": 10,
      "raw_row_number": null
    }, {
      "id": 512,
      "date": "2013-03-01",
      "value": 158252,
      "created_at": "2013-06-06 15:24:40",
      "updated_at": "2014-01-06 17:36:04",
      "detail_html": null,
      "detail_pic": null,
      "kpi_report_id": 10,
      "raw_row_number": null
    }, {
      "id": 513,
      "date": "2012-01-01",
      "value": 6282,
      "created_at": "2013-06-06 15:24:40",
      "updated_at": "2014-01-06 17:36:04",
      "detail_html": null,
      "detail_pic": null,
      "kpi_report_id": 11,
      "raw_row_number": null
    }, {
      "id": 514,
      "date": "2012-02-01",
      "value": 6108,
      "created_at": "2013-06-06 15:24:40",
      "updated_at": "2014-01-06 17:36:04",
      "detail_html": null,
      "detail_pic": null,
      "kpi_report_id": 11,
      "raw_row_number": null
    }, {
      "id": 515,
      "date": "2012-03-01",
      "value": 6403,
      "created_at": "2013-06-06 15:24:40",
      "updated_at": "2014-01-06 17:36:04",
      "detail_html": null,
      "detail_pic": null,
      "kpi_report_id": 11,
      "raw_row_number": null
    }, {
      "id": 516,
      "date": "2012-04-01",
      "value": 5088,
      "created_at": "2013-06-06 15:24:40",
      "updated_at": "2014-01-06 17:36:04",
      "detail_html": null,
      "detail_pic": null,
      "kpi_report_id": 11,
      "raw_row_number": null
    }, {
      "id": 517,
      "date": "2012-05-01",
      "value": 6714,
      "created_at": "2013-06-06 15:24:40",
      "updated_at": "2014-01-06 17:36:04",
      "detail_html": null,
      "detail_pic": null,
      "kpi_report_id": 11,
      "raw_row_number": null
    }, {
      "id": 518,
      "date": "2012-06-01",
      "value": 5873,
      "created_at": "2013-06-06 15:24:40",
      "updated_at": "2014-01-06 17:36:04",
      "detail_html": null,
      "detail_pic": null,
      "kpi_report_id": 11,
      "raw_row_number": null
    }, {
      "id": 519,
      "date": "2012-07-01",
      "value": 5155,
      "created_at": "2013-06-06 15:24:40",
      "updated_at": "2014-01-06 17:36:04",
      "detail_html": null,
      "detail_pic": null,
      "kpi_report_id": 11,
      "raw_row_number": null
    }, {
      "id": 520,
      "date": "2012-08-01",
      "value": 5638,
      "created_at": "2013-06-06 15:24:40",
      "updated_at": "2014-01-06 17:36:04",
      "detail_html": null,
      "detail_pic": null,
      "kpi_report_id": 11,
      "raw_row_number": null
    }, {
      "id": 521,
      "date": "2012-09-01",
      "value": 4929,
      "created_at": "2013-06-06 15:24:40",
      "updated_at": "2014-01-06 17:36:04",
      "detail_html": null,
      "detail_pic": null,
      "kpi_report_id": 11,
      "raw_row_number": null
    }, {
      "id": 522,
      "date": "2012-10-01",
      "value": 6406,
      "created_at": "2013-06-06 15:24:40",
      "updated_at": "2014-01-06 17:36:04",
      "detail_html": null,
      "detail_pic": null,
      "kpi_report_id": 11,
      "raw_row_number": null
    }, {
      "id": 523,
      "date": "2012-11-01",
      "value": 7387,
      "created_at": "2013-06-06 15:24:40",
      "updated_at": "2014-01-06 17:36:04",
      "detail_html": null,
      "detail_pic": null,
      "kpi_report_id": 11,
      "raw_row_number": null
    }, {
      "id": 524,
      "date": "2012-12-01",
      "value": 5733,
      "created_at": "2013-06-06 15:24:40",
      "updated_at": "2014-01-06 17:36:04",
      "detail_html": null,
      "detail_pic": null,
      "kpi_report_id": 11,
      "raw_row_number": null
    }, {
      "id": 525,
      "date": "2013-01-01",
      "value": 665458,
      "created_at": "2013-06-06 15:24:41",
      "updated_at": "2014-01-06 17:36:04",
      "detail_html": null,
      "detail_pic": null,
      "kpi_report_id": 11,
      "raw_row_number": null
    }, {
      "id": 526,
      "date": "2013-02-01",
      "value": 558960,
      "created_at": "2013-06-06 15:24:41",
      "updated_at": "2014-01-06 17:36:04",
      "detail_html": null,
      "detail_pic": null,
      "kpi_report_id": 11,
      "raw_row_number": null
    }, {
      "id": 527,
      "date": "2013-03-01",
      "value": 600258,
      "created_at": "2013-06-06 15:24:41",
      "updated_at": "2014-01-06 17:36:04",
      "detail_html": null,
      "detail_pic": null,
      "kpi_report_id": 11,
      "raw_row_number": null
    }, {
      "id": 528,
      "date": "2012-01-01",
      "value": 129364,
      "created_at": "2013-06-06 15:24:41",
      "updated_at": "2014-01-06 17:36:04",
      "detail_html": null,
      "detail_pic": null,
      "kpi_report_id": 12,
      "raw_row_number": null
    }, {
      "id": 529,
      "date": "2012-02-01",
      "value": 124260,
      "created_at": "2013-06-06 15:24:41",
      "updated_at": "2014-01-06 17:36:04",
      "detail_html": null,
      "detail_pic": null,
      "kpi_report_id": 12,
      "raw_row_number": null
    }, {
      "id": 530,
      "date": "2012-03-01",
      "value": 154854,
      "created_at": "2013-06-06 15:24:41",
      "updated_at": "2014-01-06 17:36:04",
      "detail_html": null,
      "detail_pic": null,
      "kpi_report_id": 12,
      "raw_row_number": null
    }, {
      "id": 531,
      "date": "2012-04-01",
      "value": 150925,
      "created_at": "2013-06-06 15:24:41",
      "updated_at": "2014-01-06 17:36:04",
      "detail_html": null,
      "detail_pic": null,
      "kpi_report_id": 12,
      "raw_row_number": null
    }, {
      "id": 532,
      "date": "2012-05-01",
      "value": 158879,
      "created_at": "2013-06-06 15:24:41",
      "updated_at": "2014-01-06 17:36:04",
      "detail_html": null,
      "detail_pic": null,
      "kpi_report_id": 12,
      "raw_row_number": null
    }, {
      "id": 533,
      "date": "2012-06-01",
      "value": 119985,
      "created_at": "2013-06-06 15:24:41",
      "updated_at": "2014-01-06 17:36:04",
      "detail_html": null,
      "detail_pic": null,
      "kpi_report_id": 12,
      "raw_row_number": null
    }, {
      "id": 534,
      "date": "2012-07-01",
      "value": 108454,
      "created_at": "2013-06-06 15:24:41",
      "updated_at": "2014-01-06 17:36:04",
      "detail_html": null,
      "detail_pic": null,
      "kpi_report_id": 12,
      "raw_row_number": null
    }, {
      "id": 535,
      "date": "2012-08-01",
      "value": 111615,
      "created_at": "2013-06-06 15:24:41",
      "updated_at": "2014-01-06 17:36:04",
      "detail_html": null,
      "detail_pic": null,
      "kpi_report_id": 12,
      "raw_row_number": null
    }, {
      "id": 536,
      "date": "2012-09-01",
      "value": 116248,
      "created_at": "2013-06-06 15:24:41",
      "updated_at": "2014-01-06 17:36:04",
      "detail_html": null,
      "detail_pic": null,
      "kpi_report_id": 12,
      "raw_row_number": null
    }, {
      "id": 537,
      "date": "2012-10-01",
      "value": 137122,
      "created_at": "2013-06-06 15:24:41",
      "updated_at": "2014-01-06 17:36:04",
      "detail_html": null,
      "detail_pic": null,
      "kpi_report_id": 12,
      "raw_row_number": null
    }, {
      "id": 538,
      "date": "2012-11-01",
      "value": 138014,
      "created_at": "2013-06-06 15:24:41",
      "updated_at": "2014-01-06 17:36:04",
      "detail_html": null,
      "detail_pic": null,
      "kpi_report_id": 12,
      "raw_row_number": null
    }, {
      "id": 539,
      "date": "2012-12-01",
      "value": 111913,
      "created_at": "2013-06-06 15:24:41",
      "updated_at": "2014-01-06 17:36:04",
      "detail_html": null,
      "detail_pic": null,
      "kpi_report_id": 12,
      "raw_row_number": null
    }, {
      "id": 540,
      "date": "2013-01-01",
      "value": 120450,
      "created_at": "2013-06-06 15:24:41",
      "updated_at": "2014-01-06 17:36:04",
      "detail_html": null,
      "detail_pic": null,
      "kpi_report_id": 12,
      "raw_row_number": null
    }, {
      "id": 541,
      "date": "2013-02-01",
      "value": 121485,
      "created_at": "2013-06-06 15:24:41",
      "updated_at": "2014-01-06 17:36:04",
      "detail_html": null,
      "detail_pic": null,
      "kpi_report_id": 12,
      "raw_row_number": null
    }, {
      "id": 542,
      "date": "2013-03-01",
      "value": 129639,
      "created_at": "2013-06-06 15:24:41",
      "updated_at": "2014-01-06 17:36:04",
      "detail_html": null,
      "detail_pic": null,
      "kpi_report_id": 12,
      "raw_row_number": null
    }, {
      "id": 543,
      "date": "2012-01-01",
      "value": null,
      "created_at": "2013-06-06 15:24:41",
      "updated_at": "2014-01-06 17:36:04",
      "detail_html": null,
      "detail_pic": null,
      "kpi_report_id": 13,
      "raw_row_number": null
    }, {
      "id": 544,
      "date": "2012-02-01",
      "value": null,
      "created_at": "2013-06-06 15:24:41",
      "updated_at": "2014-01-06 17:36:04",
      "detail_html": null,
      "detail_pic": null,
      "kpi_report_id": 13,
      "raw_row_number": null
    }, {
      "id": 545,
      "date": "2012-03-01",
      "value": null,
      "created_at": "2013-06-06 15:24:41",
      "updated_at": "2014-01-06 17:36:04",
      "detail_html": null,
      "detail_pic": null,
      "kpi_report_id": 13,
      "raw_row_number": null
    }, {
      "id": 546,
      "date": "2012-04-01",
      "value": null,
      "created_at": "2013-06-06 15:24:41",
      "updated_at": "2014-01-06 17:36:04",
      "detail_html": null,
      "detail_pic": null,
      "kpi_report_id": 13,
      "raw_row_number": null
    }, {
      "id": 547,
      "date": "2012-05-01",
      "value": null,
      "created_at": "2013-06-06 15:24:41",
      "updated_at": "2014-01-06 17:36:04",
      "detail_html": null,
      "detail_pic": null,
      "kpi_report_id": 13,
      "raw_row_number": null
    }, {
      "id": 548,
      "date": "2012-06-01",
      "value": null,
      "created_at": "2013-06-06 15:24:41",
      "updated_at": "2014-01-06 17:36:04",
      "detail_html": null,
      "detail_pic": null,
      "kpi_report_id": 13,
      "raw_row_number": null
    }, {
      "id": 549,
      "date": "2012-07-01",
      "value": null,
      "created_at": "2013-06-06 15:24:41",
      "updated_at": "2014-01-06 17:36:04",
      "detail_html": null,
      "detail_pic": null,
      "kpi_report_id": 13,
      "raw_row_number": null
    }, {
      "id": 550,
      "date": "2012-08-01",
      "value": null,
      "created_at": "2013-06-06 15:24:41",
      "updated_at": "2014-01-06 17:36:04",
      "detail_html": null,
      "detail_pic": null,
      "kpi_report_id": 13,
      "raw_row_number": null
    }, {
      "id": 551,
      "date": "2012-09-01",
      "value": null,
      "created_at": "2013-06-06 15:24:41",
      "updated_at": "2014-01-06 17:36:04",
      "detail_html": null,
      "detail_pic": null,
      "kpi_report_id": 13,
      "raw_row_number": null
    }, {
      "id": 552,
      "date": "2012-10-01",
      "value": null,
      "created_at": "2013-06-06 15:24:41",
      "updated_at": "2014-01-06 17:36:04",
      "detail_html": null,
      "detail_pic": null,
      "kpi_report_id": 13,
      "raw_row_number": null
    }, {
      "id": 553,
      "date": "2012-11-01",
      "value": null,
      "created_at": "2013-06-06 15:24:42",
      "updated_at": "2014-01-06 17:36:04",
      "detail_html": null,
      "detail_pic": null,
      "kpi_report_id": 13,
      "raw_row_number": null
    }, {
      "id": 554,
      "date": "2012-12-01",
      "value": null,
      "created_at": "2013-06-06 15:24:42",
      "updated_at": "2014-01-06 17:36:04",
      "detail_html": null,
      "detail_pic": null,
      "kpi_report_id": 13,
      "raw_row_number": null
    }, {
      "id": 558,
      "date": "2012-01-01",
      "value": 355621,
      "created_at": "2013-06-06 15:24:42",
      "updated_at": "2014-01-06 17:36:04",
      "detail_html": null,
      "detail_pic": null,
      "kpi_report_id": 14,
      "raw_row_number": null
    }, {
      "id": 559,
      "date": "2012-02-01",
      "value": 360028,
      "created_at": "2013-06-06 15:24:42",
      "updated_at": "2014-01-06 17:36:04",
      "detail_html": null,
      "detail_pic": null,
      "kpi_report_id": 14,
      "raw_row_number": null
    }, {
      "id": 560,
      "date": "2012-03-01",
      "value": 382124,
      "created_at": "2013-06-06 15:24:42",
      "updated_at": "2014-01-06 17:36:04",
      "detail_html": null,
      "detail_pic": null,
      "kpi_report_id": 14,
      "raw_row_number": null
    }, {
      "id": 561,
      "date": "2012-04-01",
      "value": 349065,
      "created_at": "2013-06-06 15:24:42",
      "updated_at": "2014-01-06 17:36:04",
      "detail_html": null,
      "detail_pic": null,
      "kpi_report_id": 14,
      "raw_row_number": null
    }, {
      "id": 562,
      "date": "2012-05-01",
      "value": 333935,
      "created_at": "2013-06-06 15:24:42",
      "updated_at": "2014-01-06 17:36:04",
      "detail_html": null,
      "detail_pic": null,
      "kpi_report_id": 14,
      "raw_row_number": null
    }, {
      "id": 563,
      "date": "2012-06-01",
      "value": 338555,
      "created_at": "2013-06-06 15:24:42",
      "updated_at": "2014-01-06 17:36:04",
      "detail_html": null,
      "detail_pic": null,
      "kpi_report_id": 14,
      "raw_row_number": null
    }, {
      "id": 564,
      "date": "2012-07-01",
      "value": 287210,
      "created_at": "2013-06-06 15:24:42",
      "updated_at": "2014-01-06 17:36:04",
      "detail_html": null,
      "detail_pic": null,
      "kpi_report_id": 14,
      "raw_row_number": null
    }, {
      "id": 565,
      "date": "2012-08-01",
      "value": 295144,
      "created_at": "2013-06-06 15:24:42",
      "updated_at": "2014-01-06 17:36:04",
      "detail_html": null,
      "detail_pic": null,
      "kpi_report_id": 14,
      "raw_row_number": null
    }, {
      "id": 566,
      "date": "2012-09-01",
      "value": 299530,
      "created_at": "2013-06-06 15:24:42",
      "updated_at": "2014-01-06 17:36:04",
      "detail_html": null,
      "detail_pic": null,
      "kpi_report_id": 14,
      "raw_row_number": null
    }, {
      "id": 567,
      "date": "2012-10-01",
      "value": 355167,
      "created_at": "2013-06-06 15:24:42",
      "updated_at": "2014-01-06 17:36:04",
      "detail_html": null,
      "detail_pic": null,
      "kpi_report_id": 14,
      "raw_row_number": null
    }, {
      "id": 568,
      "date": "2012-11-01",
      "value": 348043,
      "created_at": "2013-06-06 15:24:42",
      "updated_at": "2014-01-06 17:36:04",
      "detail_html": null,
      "detail_pic": null,
      "kpi_report_id": 14,
      "raw_row_number": null
    }, {
      "id": 569,
      "date": "2012-12-01",
      "value": 278076,
      "created_at": "2013-06-06 15:24:42",
      "updated_at": "2014-01-06 17:36:04",
      "detail_html": null,
      "detail_pic": null,
      "kpi_report_id": 14,
      "raw_row_number": null
    }, {
      "id": 570,
      "date": "2013-01-01",
      "value": 374077,
      "created_at": "2013-06-06 15:24:42",
      "updated_at": "2014-01-06 17:36:04",
      "detail_html": null,
      "detail_pic": null,
      "kpi_report_id": 14,
      "raw_row_number": null
    }, {
      "id": 571,
      "date": "2013-02-01",
      "value": 295311,
      "created_at": "2013-06-06 15:24:42",
      "updated_at": "2014-01-06 17:36:04",
      "detail_html": null,
      "detail_pic": null,
      "kpi_report_id": 14,
      "raw_row_number": null
    }, {
      "id": 572,
      "date": "2013-03-01",
      "value": 333172,
      "created_at": "2013-06-06 15:24:42",
      "updated_at": "2014-01-06 17:36:04",
      "detail_html": null,
      "detail_pic": null,
      "kpi_report_id": 14,
      "raw_row_number": null
    }, {
      "id": 573,
      "date": "2012-01-01",
      "value": 1130650,
      "created_at": "2013-06-06 15:24:42",
      "updated_at": "2014-01-06 17:36:04",
      "detail_html": null,
      "detail_pic": null,
      "kpi_report_id": 15,
      "raw_row_number": null
    }, {
      "id": 574,
      "date": "2012-02-01",
      "value": 1068850,
      "created_at": "2013-06-06 15:24:42",
      "updated_at": "2014-01-06 17:36:04",
      "detail_html": null,
      "detail_pic": null,
      "kpi_report_id": 15,
      "raw_row_number": null
    }, {
      "id": 575,
      "date": "2012-03-01",
      "value": 1090910,
      "created_at": "2013-06-06 15:24:42",
      "updated_at": "2014-01-06 17:36:04",
      "detail_html": null,
      "detail_pic": null,
      "kpi_report_id": 15,
      "raw_row_number": null
    }, {
      "id": 576,
      "date": "2012-04-01",
      "value": 999776,
      "created_at": "2013-06-06 15:24:42",
      "updated_at": "2014-01-06 17:36:04",
      "detail_html": null,
      "detail_pic": null,
      "kpi_report_id": 15,
      "raw_row_number": null
    }, {
      "id": 577,
      "date": "2012-05-01",
      "value": 1026570,
      "created_at": "2013-06-06 15:24:42",
      "updated_at": "2014-01-06 17:36:04",
      "detail_html": null,
      "detail_pic": null,
      "kpi_report_id": 15,
      "raw_row_number": null
    }, {
      "id": 578,
      "date": "2012-06-01",
      "value": 987327,
      "created_at": "2013-06-06 15:24:42",
      "updated_at": "2014-01-06 17:36:04",
      "detail_html": null,
      "detail_pic": null,
      "kpi_report_id": 15,
      "raw_row_number": null
    }, {
      "id": 579,
      "date": "2012-07-01",
      "value": 948647,
      "created_at": "2013-06-06 15:24:42",
      "updated_at": "2014-01-06 17:36:04",
      "detail_html": null,
      "detail_pic": null,
      "kpi_report_id": 15,
      "raw_row_number": null
    }, {
      "id": 580,
      "date": "2012-08-01",
      "value": 931952,
      "created_at": "2013-06-06 15:24:43",
      "updated_at": "2014-01-06 17:36:04",
      "detail_html": null,
      "detail_pic": null,
      "kpi_report_id": 15,
      "raw_row_number": null
    }, {
      "id": 581,
      "date": "2012-09-01",
      "value": 958818,
      "created_at": "2013-06-06 15:24:43",
      "updated_at": "2014-01-06 17:36:04",
      "detail_html": null,
      "detail_pic": null,
      "kpi_report_id": 15,
      "raw_row_number": null
    }, {
      "id": 582,
      "date": "2012-10-01",
      "value": 922100,
      "created_at": "2013-06-06 15:24:43",
      "updated_at": "2014-01-06 17:36:04",
      "detail_html": null,
      "detail_pic": null,
      "kpi_report_id": 15,
      "raw_row_number": null
    }, {
      "id": 583,
      "date": "2012-11-01",
      "value": 925150,
      "created_at": "2013-06-06 15:24:43",
      "updated_at": "2014-01-06 17:36:04",
      "detail_html": null,
      "detail_pic": null,
      "kpi_report_id": 15,
      "raw_row_number": null
    }, {
      "id": 584,
      "date": "2012-12-01",
      "value": 759741,
      "created_at": "2013-06-06 15:24:43",
      "updated_at": "2014-01-06 17:36:04",
      "detail_html": null,
      "detail_pic": null,
      "kpi_report_id": 15,
      "raw_row_number": null
    }, {
      "id": 585,
      "date": "2013-01-01",
      "value": 1064480,
      "created_at": "2013-06-06 15:24:43",
      "updated_at": "2014-01-06 17:36:04",
      "detail_html": null,
      "detail_pic": null,
      "kpi_report_id": 15,
      "raw_row_number": null
    }, {
      "id": 586,
      "date": "2013-02-01",
      "value": 1024210,
      "created_at": "2013-06-06 15:24:43",
      "updated_at": "2014-01-06 17:36:05",
      "detail_html": null,
      "detail_pic": null,
      "kpi_report_id": 15,
      "raw_row_number": null
    }, {
      "id": 587,
      "date": "2013-03-01",
      "value": 1108560,
      "created_at": "2013-06-06 15:24:43",
      "updated_at": "2014-01-06 17:36:05",
      "detail_html": null,
      "detail_pic": null,
      "kpi_report_id": 15,
      "raw_row_number": null
    }, {
      "id": 588,
      "date": "2012-01-01",
      "value": 1884160,
      "created_at": "2013-06-06 15:24:43",
      "updated_at": "2014-01-06 17:36:05",
      "detail_html": null,
      "detail_pic": null,
      "kpi_report_id": 16,
      "raw_row_number": null
    }, {
      "id": 589,
      "date": "2012-02-01",
      "value": 1793710,
      "created_at": "2013-06-06 15:24:43",
      "updated_at": "2014-01-06 17:36:05",
      "detail_html": null,
      "detail_pic": null,
      "kpi_report_id": 16,
      "raw_row_number": null
    }, {
      "id": 590,
      "date": "2012-03-01",
      "value": 1905630,
      "created_at": "2013-06-06 15:24:43",
      "updated_at": "2014-01-06 17:36:05",
      "detail_html": null,
      "detail_pic": null,
      "kpi_report_id": 16,
      "raw_row_number": null
    }, {
      "id": 591,
      "date": "2012-04-01",
      "value": 1901810,
      "created_at": "2013-06-06 15:24:43",
      "updated_at": "2014-01-06 17:36:05",
      "detail_html": null,
      "detail_pic": null,
      "kpi_report_id": 16,
      "raw_row_number": null
    }, {
      "id": 592,
      "date": "2012-05-01",
      "value": 1973580,
      "created_at": "2013-06-06 15:24:43",
      "updated_at": "2014-01-06 17:36:05",
      "detail_html": null,
      "detail_pic": null,
      "kpi_report_id": 16,
      "raw_row_number": null
    }, {
      "id": 593,
      "date": "2012-06-01",
      "value": 1932990,
      "created_at": "2013-06-06 15:24:43",
      "updated_at": "2014-01-06 17:36:05",
      "detail_html": null,
      "detail_pic": null,
      "kpi_report_id": 16,
      "raw_row_number": null
    }, {
      "id": 594,
      "date": "2012-07-01",
      "value": 1899560,
      "created_at": "2013-06-06 15:24:43",
      "updated_at": "2014-01-06 17:36:05",
      "detail_html": null,
      "detail_pic": null,
      "kpi_report_id": 16,
      "raw_row_number": null
    }, {
      "id": 595,
      "date": "2012-08-01",
      "value": 1820090,
      "created_at": "2013-06-06 15:24:43",
      "updated_at": "2014-01-06 17:36:05",
      "detail_html": null,
      "detail_pic": null,
      "kpi_report_id": 16,
      "raw_row_number": null
    }, {
      "id": 596,
      "date": "2012-09-01",
      "value": 1851920,
      "created_at": "2013-06-06 15:24:43",
      "updated_at": "2014-01-06 17:36:05",
      "detail_html": null,
      "detail_pic": null,
      "kpi_report_id": 16,
      "raw_row_number": null
    }, {
      "id": 597,
      "date": "2012-10-01",
      "value": 2027080,
      "created_at": "2013-06-06 15:24:43",
      "updated_at": "2014-01-06 17:36:05",
      "detail_html": null,
      "detail_pic": null,
      "kpi_report_id": 16,
      "raw_row_number": null
    }, {
      "id": 598,
      "date": "2012-11-01",
      "value": 2046050,
      "created_at": "2013-06-06 15:24:43",
      "updated_at": "2014-01-06 17:36:05",
      "detail_html": null,
      "detail_pic": null,
      "kpi_report_id": 16,
      "raw_row_number": null
    }, {
      "id": 599,
      "date": "2012-12-01",
      "value": 2254950,
      "created_at": "2013-06-06 15:24:43",
      "updated_at": "2014-01-06 17:36:05",
      "detail_html": null,
      "detail_pic": null,
      "kpi_report_id": 16,
      "raw_row_number": null
    }, {
      "id": 600,
      "date": "2013-01-01",
      "value": 2191610,
      "created_at": "2013-06-06 15:24:43",
      "updated_at": "2014-01-06 17:36:05",
      "detail_html": null,
      "detail_pic": null,
      "kpi_report_id": 16,
      "raw_row_number": null
    }, {
      "id": 601,
      "date": "2013-02-01",
      "value": 1822610,
      "created_at": "2013-06-06 15:24:43",
      "updated_at": "2014-01-06 17:36:05",
      "detail_html": null,
      "detail_pic": null,
      "kpi_report_id": 16,
      "raw_row_number": null
    }, {
      "id": 602,
      "date": "2013-03-01",
      "value": 1996230,
      "created_at": "2013-06-06 15:24:43",
      "updated_at": "2014-01-06 17:36:05",
      "detail_html": null,
      "detail_pic": null,
      "kpi_report_id": 16,
      "raw_row_number": null
    }, {
      "id": 603,
      "date": "2012-01-01",
      "value": 97226,
      "created_at": "2013-06-06 15:24:43",
      "updated_at": "2014-01-06 17:36:05",
      "detail_html": null,
      "detail_pic": null,
      "kpi_report_id": 17,
      "raw_row_number": null
    }, {
      "id": 604,
      "date": "2012-02-01",
      "value": 98610,
      "created_at": "2013-06-06 15:24:43",
      "updated_at": "2014-01-06 17:36:05",
      "detail_html": null,
      "detail_pic": null,
      "kpi_report_id": 17,
      "raw_row_number": null
    }, {
      "id": 605,
      "date": "2012-03-01",
      "value": 124288,
      "created_at": "2013-06-06 15:24:43",
      "updated_at": "2014-01-06 17:36:05",
      "detail_html": null,
      "detail_pic": null,
      "kpi_report_id": 17,
      "raw_row_number": null
    }, {
      "id": 606,
      "date": "2012-04-01",
      "value": 111066,
      "created_at": "2013-06-06 15:24:43",
      "updated_at": "2014-01-06 17:36:05",
      "detail_html": null,
      "detail_pic": null,
      "kpi_report_id": 17,
      "raw_row_number": null
    }, {
      "id": 607,
      "date": "2012-05-01",
      "value": 122501,
      "created_at": "2013-06-06 15:24:44",
      "updated_at": "2014-01-06 17:36:05",
      "detail_html": null,
      "detail_pic": null,
      "kpi_report_id": 17,
      "raw_row_number": null
    }, {
      "id": 608,
      "date": "2012-06-01",
      "value": 101844,
      "created_at": "2013-06-06 15:24:44",
      "updated_at": "2014-01-06 17:36:05",
      "detail_html": null,
      "detail_pic": null,
      "kpi_report_id": 17,
      "raw_row_number": null
    }, {
      "id": 609,
      "date": "2012-07-01",
      "value": 109258,
      "created_at": "2013-06-06 15:24:44",
      "updated_at": "2014-01-06 17:36:05",
      "detail_html": null,
      "detail_pic": null,
      "kpi_report_id": 17,
      "raw_row_number": null
    }, {
      "id": 610,
      "date": "2012-08-01",
      "value": 104076,
      "created_at": "2013-06-06 15:24:44",
      "updated_at": "2014-01-06 17:36:05",
      "detail_html": null,
      "detail_pic": null,
      "kpi_report_id": 17,
      "raw_row_number": null
    }, {
      "id": 611,
      "date": "2012-09-01",
      "value": 104066,
      "created_at": "2013-06-06 15:24:44",
      "updated_at": "2014-01-06 17:36:05",
      "detail_html": null,
      "detail_pic": null,
      "kpi_report_id": 17,
      "raw_row_number": null
    }, {
      "id": 612,
      "date": "2012-10-01",
      "value": 117278,
      "created_at": "2013-06-06 15:24:44",
      "updated_at": "2014-01-06 17:36:05",
      "detail_html": null,
      "detail_pic": null,
      "kpi_report_id": 17,
      "raw_row_number": null
    }, {
      "id": 613,
      "date": "2012-11-01",
      "value": 105941,
      "created_at": "2013-06-06 15:24:44",
      "updated_at": "2014-01-06 17:36:05",
      "detail_html": null,
      "detail_pic": null,
      "kpi_report_id": 17,
      "raw_row_number": null
    }, {
      "id": 614,
      "date": "2012-12-01",
      "value": 83814,
      "created_at": "2013-06-06 15:24:44",
      "updated_at": "2014-01-06 17:36:05",
      "detail_html": null,
      "detail_pic": null,
      "kpi_report_id": 17,
      "raw_row_number": null
    }, {
      "id": 615,
      "date": "2013-01-01",
      "value": 117213,
      "created_at": "2013-06-06 15:24:44",
      "updated_at": "2014-01-06 17:36:05",
      "detail_html": null,
      "detail_pic": null,
      "kpi_report_id": 17,
      "raw_row_number": null
    }, {
      "id": 616,
      "date": "2013-02-01",
      "value": 108650,
      "created_at": "2013-06-06 15:24:44",
      "updated_at": "2014-01-06 17:36:05",
      "detail_html": null,
      "detail_pic": null,
      "kpi_report_id": 17,
      "raw_row_number": null
    }, {
      "id": 617,
      "date": "2013-03-01",
      "value": 115499,
      "created_at": "2013-06-06 15:24:44",
      "updated_at": "2014-01-06 17:36:05",
      "detail_html": null,
      "detail_pic": null,
      "kpi_report_id": 17,
      "raw_row_number": null
    }, {
      "id": 618,
      "date": "2012-01-01",
      "value": 116563,
      "created_at": "2013-06-06 15:24:44",
      "updated_at": "2014-01-06 17:36:05",
      "detail_html": null,
      "detail_pic": null,
      "kpi_report_id": 18,
      "raw_row_number": null
    }, {
      "id": 619,
      "date": "2012-02-01",
      "value": 141583,
      "created_at": "2013-06-06 15:24:44",
      "updated_at": "2014-01-06 17:36:05",
      "detail_html": null,
      "detail_pic": null,
      "kpi_report_id": 18,
      "raw_row_number": null
    }, {
      "id": 620,
      "date": "2012-03-01",
      "value": 126481,
      "created_at": "2013-06-06 15:24:44",
      "updated_at": "2014-01-06 17:36:05",
      "detail_html": null,
      "detail_pic": null,
      "kpi_report_id": 18,
      "raw_row_number": null
    }, {
      "id": 621,
      "date": "2012-04-01",
      "value": 127609,
      "created_at": "2013-06-06 15:24:44",
      "updated_at": "2014-01-06 17:36:05",
      "detail_html": null,
      "detail_pic": null,
      "kpi_report_id": 18,
      "raw_row_number": null
    }, {
      "id": 622,
      "date": "2012-05-01",
      "value": 139661,
      "created_at": "2013-06-06 15:24:44",
      "updated_at": "2014-01-06 17:36:05",
      "detail_html": null,
      "detail_pic": null,
      "kpi_report_id": 18,
      "raw_row_number": null
    }, {
      "id": 623,
      "date": "2012-06-01",
      "value": 138699,
      "created_at": "2013-06-06 15:24:44",
      "updated_at": "2014-01-06 17:36:05",
      "detail_html": null,
      "detail_pic": null,
      "kpi_report_id": 18,
      "raw_row_number": null
    }, {
      "id": 624,
      "date": "2012-07-01",
      "value": 153164,
      "created_at": "2013-06-06 15:24:44",
      "updated_at": "2014-01-06 17:36:05",
      "detail_html": null,
      "detail_pic": null,
      "kpi_report_id": 18,
      "raw_row_number": null
    }, {
      "id": 625,
      "date": "2012-08-01",
      "value": 158247,
      "created_at": "2013-06-06 15:24:44",
      "updated_at": "2014-01-06 17:36:05",
      "detail_html": null,
      "detail_pic": null,
      "kpi_report_id": 18,
      "raw_row_number": null
    }, {
      "id": 626,
      "date": "2012-09-01",
      "value": 163606,
      "created_at": "2013-06-06 15:24:44",
      "updated_at": "2014-01-06 17:36:05",
      "detail_html": null,
      "detail_pic": null,
      "kpi_report_id": 18,
      "raw_row_number": null
    }, {
      "id": 627,
      "date": "2012-10-01",
      "value": 176774,
      "created_at": "2013-06-06 15:24:44",
      "updated_at": "2014-01-06 17:36:05",
      "detail_html": null,
      "detail_pic": null,
      "kpi_report_id": 18,
      "raw_row_number": null
    }, {
      "id": 628,
      "date": "2012-11-01",
      "value": 166535,
      "created_at": "2013-06-06 15:24:45",
      "updated_at": "2014-01-06 17:36:05",
      "detail_html": null,
      "detail_pic": null,
      "kpi_report_id": 18,
      "raw_row_number": null
    }, {
      "id": 629,
      "date": "2012-12-01",
      "value": 130973,
      "created_at": "2013-06-06 15:24:45",
      "updated_at": "2014-01-06 17:36:05",
      "detail_html": null,
      "detail_pic": null,
      "kpi_report_id": 18,
      "raw_row_number": null
    }, {
      "id": 630,
      "date": "2013-01-01",
      "value": 190337,
      "created_at": "2013-06-06 15:24:45",
      "updated_at": "2014-01-06 17:36:05",
      "detail_html": null,
      "detail_pic": null,
      "kpi_report_id": 18,
      "raw_row_number": null
    }, {
      "id": 631,
      "date": "2013-03-01",
      "value": 177878,
      "created_at": "2013-06-06 15:24:45",
      "updated_at": "2014-01-06 17:36:05",
      "detail_html": null,
      "detail_pic": null,
      "kpi_report_id": 18,
      "raw_row_number": null
    }, {
      "id": 632,
      "date": "2012-01-01",
      "value": null,
      "created_at": "2013-06-06 15:24:45",
      "updated_at": "2014-01-06 17:36:05",
      "detail_html": null,
      "detail_pic": null,
      "kpi_report_id": 19,
      "raw_row_number": null
    }, {
      "id": 644,
      "date": "2013-01-01",
      "value": null,
      "created_at": "2013-06-06 15:24:45",
      "updated_at": "2014-01-06 17:36:05",
      "detail_html": null,
      "detail_pic": null,
      "kpi_report_id": 19,
      "raw_row_number": null
    }, {
      "id": 647,
      "date": "2012-01-01",
      "value": 387544,
      "created_at": "2013-06-06 15:24:45",
      "updated_at": "2014-01-06 17:36:05",
      "detail_html": null,
      "detail_pic": null,
      "kpi_report_id": 20,
      "raw_row_number": null
    }, {
      "id": 648,
      "date": "2012-02-01",
      "value": 414789,
      "created_at": "2013-06-06 15:24:45",
      "updated_at": "2014-01-06 17:36:05",
      "detail_html": null,
      "detail_pic": null,
      "kpi_report_id": 20,
      "raw_row_number": null
    }, {
      "id": 649,
      "date": "2012-03-01",
      "value": 442729,
      "created_at": "2013-06-06 15:24:45",
      "updated_at": "2014-01-06 17:36:05",
      "detail_html": null,
      "detail_pic": null,
      "kpi_report_id": 20,
      "raw_row_number": null
    }, {
      "id": 650,
      "date": "2012-04-01",
      "value": 418627,
      "created_at": "2013-06-06 15:24:45",
      "updated_at": "2014-01-06 17:36:05",
      "detail_html": null,
      "detail_pic": null,
      "kpi_report_id": 20,
      "raw_row_number": null
    }, {
      "id": 651,
      "date": "2012-05-01",
      "value": 381169,
      "created_at": "2013-06-06 15:24:45",
      "updated_at": "2014-01-06 17:36:05",
      "detail_html": null,
      "detail_pic": null,
      "kpi_report_id": 20,
      "raw_row_number": null
    }, {
      "id": 652,
      "date": "2012-06-01",
      "value": 355484,
      "created_at": "2013-06-06 15:24:45",
      "updated_at": "2014-01-06 17:36:05",
      "detail_html": null,
      "detail_pic": null,
      "kpi_report_id": 20,
      "raw_row_number": null
    }, {
      "id": 653,
      "date": "2012-07-01",
      "value": 386559,
      "created_at": "2013-06-06 15:24:45",
      "updated_at": "2014-01-06 17:36:05",
      "detail_html": null,
      "detail_pic": null,
      "kpi_report_id": 20,
      "raw_row_number": null
    }, {
      "id": 654,
      "date": "2012-08-01",
      "value": 357355,
      "created_at": "2013-06-06 15:24:45",
      "updated_at": "2014-01-06 17:36:05",
      "detail_html": null,
      "detail_pic": null,
      "kpi_report_id": 20,
      "raw_row_number": null
    }, {
      "id": 655,
      "date": "2012-09-01",
      "value": 364961,
      "created_at": "2013-06-06 15:24:46",
      "updated_at": "2014-01-06 17:36:05",
      "detail_html": null,
      "detail_pic": null,
      "kpi_report_id": 20,
      "raw_row_number": null
    }, {
      "id": 656,
      "date": "2012-10-01",
      "value": 383899,
      "created_at": "2013-06-06 15:24:46",
      "updated_at": "2014-01-06 17:36:05",
      "detail_html": null,
      "detail_pic": null,
      "kpi_report_id": 20,
      "raw_row_number": null
    }, {
      "id": 657,
      "date": "2012-11-01",
      "value": 366386,
      "created_at": "2013-06-06 15:24:46",
      "updated_at": "2014-01-06 17:36:05",
      "detail_html": null,
      "detail_pic": null,
      "kpi_report_id": 20,
      "raw_row_number": null
    }, {
      "id": 658,
      "date": "2012-12-01",
      "value": 302619,
      "created_at": "2013-06-06 15:24:46",
      "updated_at": "2014-01-06 17:36:05",
      "detail_html": null,
      "detail_pic": null,
      "kpi_report_id": 20,
      "raw_row_number": null
    }, {
      "id": 659,
      "date": "2013-01-01",
      "value": 484348,
      "created_at": "2013-06-06 15:24:46",
      "updated_at": "2014-01-06 17:36:05",
      "detail_html": null,
      "detail_pic": null,
      "kpi_report_id": 20,
      "raw_row_number": null
    }, {
      "id": 660,
      "date": "2013-02-01",
      "value": 471105,
      "created_at": "2013-06-06 15:24:46",
      "updated_at": "2014-01-06 17:36:05",
      "detail_html": null,
      "detail_pic": null,
      "kpi_report_id": 20,
      "raw_row_number": null
    }, {
      "id": 661,
      "date": "2013-03-01",
      "value": 496823,
      "created_at": "2013-06-06 15:24:46",
      "updated_at": "2014-01-06 17:36:05",
      "detail_html": null,
      "detail_pic": null,
      "kpi_report_id": 20,
      "raw_row_number": null
    }, {
      "id": 662,
      "date": "2012-01-01",
      "value": 73759,
      "created_at": "2013-06-06 15:24:46",
      "updated_at": "2014-01-06 17:36:05",
      "detail_html": null,
      "detail_pic": null,
      "kpi_report_id": 21,
      "raw_row_number": null
    }, {
      "id": 663,
      "date": "2012-02-01",
      "value": 67004,
      "created_at": "2013-06-06 15:24:46",
      "updated_at": "2014-01-06 17:36:05",
      "detail_html": null,
      "detail_pic": null,
      "kpi_report_id": 21,
      "raw_row_number": null
    }, {
      "id": 664,
      "date": "2012-03-01",
      "value": 62848,
      "created_at": "2013-06-06 15:24:46",
      "updated_at": "2014-01-06 17:36:05",
      "detail_html": null,
      "detail_pic": null,
      "kpi_report_id": 21,
      "raw_row_number": null
    }, {
      "id": 665,
      "date": "2012-04-01",
      "value": 50129,
      "created_at": "2013-06-06 15:24:46",
      "updated_at": "2014-01-06 17:36:05",
      "detail_html": null,
      "detail_pic": null,
      "kpi_report_id": 21,
      "raw_row_number": null
    }, {
      "id": 666,
      "date": "2012-05-01",
      "value": 58258,
      "created_at": "2013-06-06 15:24:46",
      "updated_at": "2014-01-06 17:36:05",
      "detail_html": null,
      "detail_pic": null,
      "kpi_report_id": 21,
      "raw_row_number": null
    }, {
      "id": 667,
      "date": "2012-06-01",
      "value": 57762,
      "created_at": "2013-06-06 15:24:46",
      "updated_at": "2014-01-06 17:36:05",
      "detail_html": null,
      "detail_pic": null,
      "kpi_report_id": 21,
      "raw_row_number": null
    }, {
      "id": 668,
      "date": "2012-07-01",
      "value": 54858,
      "created_at": "2013-06-06 15:24:46",
      "updated_at": "2014-01-06 17:36:05",
      "detail_html": null,
      "detail_pic": null,
      "kpi_report_id": 21,
      "raw_row_number": null
    }, {
      "id": 669,
      "date": "2012-08-01",
      "value": 59987,
      "created_at": "2013-06-06 15:24:46",
      "updated_at": "2014-01-06 17:36:05",
      "detail_html": null,
      "detail_pic": null,
      "kpi_report_id": 21,
      "raw_row_number": null
    }, {
      "id": 670,
      "date": "2012-09-01",
      "value": 69783,
      "created_at": "2013-06-06 15:24:46",
      "updated_at": "2014-01-06 17:36:05",
      "detail_html": null,
      "detail_pic": null,
      "kpi_report_id": 21,
      "raw_row_number": null
    }, {
      "id": 671,
      "date": "2012-10-01",
      "value": 63596,
      "created_at": "2013-06-06 15:24:46",
      "updated_at": "2014-01-06 17:36:05",
      "detail_html": null,
      "detail_pic": null,
      "kpi_report_id": 21,
      "raw_row_number": null
    }, {
      "id": 672,
      "date": "2012-11-01",
      "value": 60574,
      "created_at": "2013-06-06 15:24:46",
      "updated_at": "2014-01-06 17:36:05",
      "detail_html": null,
      "detail_pic": null,
      "kpi_report_id": 21,
      "raw_row_number": null
    }, {
      "id": 673,
      "date": "2012-12-01",
      "value": 47373,
      "created_at": "2013-06-06 15:24:46",
      "updated_at": "2014-01-06 17:36:05",
      "detail_html": null,
      "detail_pic": null,
      "kpi_report_id": 21,
      "raw_row_number": null
    }, {
      "id": 674,
      "date": "2012-01-01",
      "value": 53715,
      "created_at": "2013-06-06 15:24:46",
      "updated_at": "2014-01-06 17:36:05",
      "detail_html": null,
      "detail_pic": null,
      "kpi_report_id": 22,
      "raw_row_number": null
    }, {
      "id": 675,
      "date": "2012-02-01",
      "value": 46712,
      "created_at": "2013-06-06 15:24:46",
      "updated_at": "2014-01-06 17:36:05",
      "detail_html": null,
      "detail_pic": null,
      "kpi_report_id": 22,
      "raw_row_number": null
    }, {
      "id": 676,
      "date": "2012-03-01",
      "value": 48987,
      "created_at": "2013-06-06 15:24:46",
      "updated_at": "2014-01-06 17:36:05",
      "detail_html": null,
      "detail_pic": null,
      "kpi_report_id": 22,
      "raw_row_number": null
    }, {
      "id": 677,
      "date": "2012-04-01",
      "value": null,
      "created_at": "2013-06-06 15:24:46",
      "updated_at": "2014-01-06 17:36:05",
      "detail_html": null,
      "detail_pic": null,
      "kpi_report_id": 22,
      "raw_row_number": null
    }, {
      "id": 678,
      "date": "2012-05-01",
      "value": null,
      "created_at": "2013-06-06 15:24:46",
      "updated_at": "2014-01-06 17:36:05",
      "detail_html": null,
      "detail_pic": null,
      "kpi_report_id": 22,
      "raw_row_number": null
    }, {
      "id": 679,
      "date": "2012-06-01",
      "value": null,
      "created_at": "2013-06-06 15:24:46",
      "updated_at": "2014-01-06 17:36:05",
      "detail_html": null,
      "detail_pic": null,
      "kpi_report_id": 22,
      "raw_row_number": null
    }, {
      "id": 680,
      "date": "2012-07-01",
      "value": null,
      "created_at": "2013-06-06 15:24:46",
      "updated_at": "2014-01-06 17:36:05",
      "detail_html": null,
      "detail_pic": null,
      "kpi_report_id": 22,
      "raw_row_number": null
    }, {
      "id": 681,
      "date": "2012-08-01",
      "value": null,
      "created_at": "2013-06-06 15:24:46",
      "updated_at": "2014-01-06 17:36:05",
      "detail_html": null,
      "detail_pic": null,
      "kpi_report_id": 22,
      "raw_row_number": null
    }, {
      "id": 682,
      "date": "2012-09-01",
      "value": null,
      "created_at": "2013-06-06 15:24:46",
      "updated_at": "2014-01-06 17:36:06",
      "detail_html": null,
      "detail_pic": null,
      "kpi_report_id": 22,
      "raw_row_number": null
    }, {
      "id": 683,
      "date": "2012-10-01",
      "value": null,
      "created_at": "2013-06-06 15:24:46",
      "updated_at": "2014-01-06 17:36:06",
      "detail_html": null,
      "detail_pic": null,
      "kpi_report_id": 22,
      "raw_row_number": null
    }, {
      "id": 684,
      "date": "2012-11-01",
      "value": null,
      "created_at": "2013-06-06 15:24:47",
      "updated_at": "2014-01-06 17:36:06",
      "detail_html": null,
      "detail_pic": null,
      "kpi_report_id": 22,
      "raw_row_number": null
    }, {
      "id": 685,
      "date": "2012-12-01",
      "value": null,
      "created_at": "2013-06-06 15:24:47",
      "updated_at": "2014-01-06 17:36:06",
      "detail_html": null,
      "detail_pic": null,
      "kpi_report_id": 22,
      "raw_row_number": null
    }, {
      "id": 686,
      "date": "2013-01-01",
      "value": 35021,
      "created_at": "2013-06-06 15:24:47",
      "updated_at": "2014-01-06 17:36:06",
      "detail_html": null,
      "detail_pic": null,
      "kpi_report_id": 22,
      "raw_row_number": null
    }, {
      "id": 687,
      "date": "2013-02-01",
      "value": 29657,
      "created_at": "2013-06-06 15:24:47",
      "updated_at": "2014-01-06 17:36:06",
      "detail_html": null,
      "detail_pic": null,
      "kpi_report_id": 22,
      "raw_row_number": null
    }, {
      "id": 688,
      "date": "2013-03-01",
      "value": 31100,
      "created_at": "2013-06-06 15:24:47",
      "updated_at": "2014-01-06 17:36:06",
      "detail_html": null,
      "detail_pic": null,
      "kpi_report_id": 22,
      "raw_row_number": null
    }, {
      "id": 689,
      "date": "2012-01-01",
      "value": 201878,
      "created_at": "2013-06-06 15:24:47",
      "updated_at": "2014-01-06 17:36:06",
      "detail_html": null,
      "detail_pic": null,
      "kpi_report_id": 23,
      "raw_row_number": null
    }, {
      "id": 690,
      "date": "2012-02-01",
      "value": 228144,
      "created_at": "2013-06-06 15:24:47",
      "updated_at": "2014-01-06 17:36:06",
      "detail_html": null,
      "detail_pic": null,
      "kpi_report_id": 23,
      "raw_row_number": null
    }, {
      "id": 691,
      "date": "2012-03-01",
      "value": 232740,
      "created_at": "2013-06-06 15:24:47",
      "updated_at": "2014-01-06 17:36:06",
      "detail_html": null,
      "detail_pic": null,
      "kpi_report_id": 23,
      "raw_row_number": null
    }, {
      "id": 692,
      "date": "2012-04-01",
      "value": 207935,
      "created_at": "2013-06-06 15:24:47",
      "updated_at": "2014-01-06 17:36:06",
      "detail_html": null,
      "detail_pic": null,
      "kpi_report_id": 23,
      "raw_row_number": null
    }, {
      "id": 693,
      "date": "2012-05-01",
      "value": 246942,
      "created_at": "2013-06-06 15:24:47",
      "updated_at": "2014-01-06 17:36:06",
      "detail_html": null,
      "detail_pic": null,
      "kpi_report_id": 23,
      "raw_row_number": null
    }, {
      "id": 694,
      "date": "2012-06-01",
      "value": 229800,
      "created_at": "2013-06-06 15:24:47",
      "updated_at": "2014-01-06 17:36:06",
      "detail_html": null,
      "detail_pic": null,
      "kpi_report_id": 23,
      "raw_row_number": null
    }, {
      "id": 695,
      "date": "2012-07-01",
      "value": 327534,
      "created_at": "2013-06-06 15:24:47",
      "updated_at": "2014-01-06 17:36:06",
      "detail_html": null,
      "detail_pic": null,
      "kpi_report_id": 23,
      "raw_row_number": null
    }
  ];

  JQL = {
    config: {
      where: {
        invalidKeyBehavior: "ignore"
      },
      async: {
        delay: 20,
        recordsPerCall: 10000
      }
    },
    sum: function(col) {
      var f;
      f = function(vals) {
        var len1, m, res, val;
        res = 0;
        for (m = 0, len1 = vals.length; m < len1; m++) {
          val = vals[m];
          res += val;
        }
        return res;
      };
      f.column = col;
      f.name = "sum";
      f.type = function() {
        return "number";
      };
      return f;
    },
    first: function(col) {
      var f, self;
      f = function(vals) {
        return vals[0];
      };
      f.column = col;
      f.name = "first";
      self = this;
      f.type = function() {
        return self.schema.cols[self.schema.nameToIdx(col)].type;
      };
      return f;
    },
    last: function(col) {
      var f;
      f = function(vals) {
        return vals[vals.length - 1];
      };
      f.column = col;
      f.name = "last";
      f.type = function() {
        return self.schema.cols[self.schema.nameToIdx(col)].type;
      };
      return f;
    },
    createAggregation: function(func, onColumn, aggrName, aggrType) {
      func.column = onColumn;
      func.name = aggrName;
      func.type = aggrType;
      return func;
    }
  };

  getSelf = function() {
    return this;
  };

  toArr = function(args) {
    return Array.prototype.slice.call(args);
  };

  arrEquals = function(arr1, arr2) {
    var i, len1, m, x, y;
    if (arr1.length !== arr2.length) {
      return false;
    }
    for (i = m = 0, len1 = arr1.length; m < len1; i = ++m) {
      x = arr1[i];
      y = arr2[i];
      if (x instanceof Array && y instanceof Array) {
        if (!arrEquals(x, y)) {
          return false;
        }
      } else if (x !== y) {
        return false;
      }
    }
    return true;
  };

  arrUnique = function(arr) {
    var done, elem, len1, len2, m, o, res, valid;
    res = [];
    for (m = 0, len1 = arr.length; m < len1; m++) {
      elem = arr[m];
      valid = true;
      for (o = 0, len2 = res.length; o < len2; o++) {
        done = res[o];
        if (!(arrEquals(done, elem))) {
          continue;
        }
        valid = false;
        break;
      }
      if (valid) {
        res.push(elem);
      }
    }
    return res;
  };

  cloneObject = function(obj) {
    return JSON.parse(JSON.stringify(obj));
  };

  padNum = function(num, digits) {
    var i, idx, len, m, ref;
    if (typeof num === "number") {
      num = "" + num;
    }
    len = num.length;
    if ((idx = num.indexOf(".")) >= 0) {
      len = idx;
    }
    if (digits > len) {
      for (i = m = 0, ref = digits - len; 0 <= ref ? m < ref : m > ref; i = 0 <= ref ? ++m : --m) {
        num = "0" + num;
      }
    }
    return num;
  };

  JQL.Schema = (function() {
    var renameColumn;

    Schema.typeToVal = {
      number: 0,
      string: "",
      boolean: false,
      object: {}
    };

    Schema.fromSchema = function(schema) {
      var col, len1, m, ref, result;
      result = new JQL.Schema(schema.table);
      result.names = schema.names.slice(0);
      result.types = schema.types.slice(0);
      ref = schema.cols;
      for (m = 0, len1 = ref.length; m < len1; m++) {
        col = ref[m];
        result.cols.push({
          name: col.name,
          index: col.index,
          type: col.type
        });
      }
      return result;
    };

    function Schema(table, record, preTyped) {
      var i, k, type, v;
      this.table = table;
      this.cols = [];
      this.names = [];
      this.types = [];
      if (record != null) {
        i = 0;
        for (k in record) {
          v = record[k];
          if (!preTyped) {
            type = typeof v;
            if ((v != null) && type === "object") {
              type = v.constructor.name;
            }
          } else {
            type = v;
          }
          this.cols.push({
            name: k,
            index: i,
            type: type,
            notNull: false,
            autoIncrement: false,
            prime: false
          });
          this.names.push(k);
          this.types.push(type);
          i++;
        }
      }
    }

    Schema.prototype.setNotNulls = function() {
      var col, cols, len1, m, ref, ref1;
      cols = 1 <= arguments.length ? slice.call(arguments, 0) : [];
      if (cols[0] instanceof Array) {
        cols = cols[0];
      }
      ref = this.cols;
      for (m = 0, len1 = ref.length; m < len1; m++) {
        col = ref[m];
        if (ref1 = col.name, indexOf.call(cols, ref1) >= 0) {
          col.notNull = true;
        } else if (col.notNull) {
          col.notNull = false;
        }
      }
      return this;
    };

    Schema.prototype.setAutoIncrements = function() {
      var col, cols, len1, m, ref, ref1;
      cols = 1 <= arguments.length ? slice.call(arguments, 0) : [];
      if (cols[0] instanceof Array) {
        cols = cols[0];
      }
      ref = this.cols;
      for (m = 0, len1 = ref.length; m < len1; m++) {
        col = ref[m];
        if (ref1 = col.name, indexOf.call(cols, ref1) >= 0) {
          col.autoIncrement = true;
        } else if (col.autoIncrement) {
          col.autoIncrement = false;
        }
      }
      return this;
    };

    Schema.prototype._updateData = function() {
      var col, i, len1, m, names, ref, types;
      names = [];
      types = [];
      ref = this.cols;
      for (i = m = 0, len1 = ref.length; m < len1; i = ++m) {
        col = ref[i];
        names.push(col.name);
        types.push(col.type);
      }
      this.names = names;
      this.types = types;
      return this;
    };

    Schema.prototype.clone = function() {
      return JQL.Schema.fromSchema(this);
    };

    Schema.prototype.and = function(schema) {
      var col, i, indicesToRemove, len1, m, name, ref;
      indicesToRemove = [];
      ref = this.names;
      for (i = m = 0, len1 = ref.length; m < len1; i = ++m) {
        name = ref[i];
        if (schema.nameToIdx(name) < 0) {
          indicesToRemove.push(i);
        }
      }
      this.cols = (function() {
        var len2, o, ref1, results;
        ref1 = this.cols;
        results = [];
        for (i = o = 0, len2 = ref1.length; o < len2; i = ++o) {
          col = ref1[i];
          if (indexOf.call(indicesToRemove, i) < 0) {
            results.push(col);
          }
        }
        return results;
      }).call(this);
      this._updateData();
      return this;
    };

    Schema.prototype.or = function(schema) {};

    Schema.prototype.concat = function(schema) {
      var col, i, len1, len2, m, o, ref, ref1;
      ref = this.cols;
      for (i = m = 0, len1 = ref.length; m < len1; i = ++m) {
        col = ref[i];
        if (!(indexOf.call(col.name, ".") < 0)) {
          continue;
        }
        console.log(col);
        this.cols[i].name = this.table.name + "." + col.name;
      }
      ref1 = schema.cols;
      for (i = o = 0, len2 = ref1.length; o < len2; i = ++o) {
        col = ref1[i];
        if (!(indexOf.call(col.name, ".") < 0)) {
          continue;
        }
        console.log(col);
        schema.cols[i].name = schema.table.name + "." + col.name;
      }
      this.cols = this.cols.concat(schema.cols);
      this._updateData();
      return this;
    };

    Schema.prototype.join = function() {
      return this.concat.apply(this, arguments);
    };


    /**
    * @method addColumn
    * @param column {Object}
    * @param async {Boolean}
    * Optional. Default is 'false'. If set to 'true' appending the initial value to the table records is done asynchronously. Recommended for very tables with many records.
    * @param callback {Function}
    * Optional. If passed and the 'async' parameter is 'true' the callback will be executed after all records have been changed.
    *
     */

    Schema.prototype.addColumn = function(col, async, callback) {
      var colData, delay, deltaIdx, f, i, initValue, len1, m, maxIdx, record, records, ref;
      if (async == null) {
        async = false;
      }
      colData = {
        name: col.name,
        index: this.cols.length,
        type: col.type.toLowerCase(),
        notNull: col.notNull || false,
        autoIncrement: col.autoIncrement || false,
        prime: col.prime || col.primaryKey || false
      };
      this.cols.push(colData);
      this._updateData();
      initValue = col.initValue;
      if (col.initValue === void 0) {
        initValue = null;
      }
      if ((initValue != null) && typeof initValue !== colData.type) {
        console.warn("Initial value '" + initValue + "' (" + (typeof initValue) + ") does not match column type '" + colData.type + "'! Falling back to 'null'.");
        initValue = null;
      }
      if (!async) {
        ref = this.table.records;
        for (m = 0, len1 = ref.length; m < len1; m++) {
          record = ref[m];
          record.push(initValue);
        }
      } else {
        i = 0;
        records = this.table.records;
        deltaIdx = JQL.config.async.recordsPerCall;
        delay = JQL.config.async.delay;
        maxIdx = records.length;
        f = function(index) {
          var doCallback, max, o, ref1, ref2;
          max = index + deltaIdx;
          doCallback = false;
          if (max > maxIdx) {
            max = maxIdx;
            doCallback = true;
          }
          for (i = o = ref1 = index, ref2 = max; ref1 <= ref2 ? o < ref2 : o > ref2; i = ref1 <= ref2 ? ++o : --o) {
            records[i].push(initValue);
          }
          if (!doCallback) {
            return window.setTimeout(function() {
              return f(max);
            }, delay);
          }
          return typeof callback === "function" ? callback() : void 0;
        };
        window.setTimeout(function() {
          return f(0);
        }, 0);
      }
      return this;
    };

    Schema.prototype.deleteColumn = function() {
      var col, i, indices, len1, m, name, names;
      names = 1 <= arguments.length ? slice.call(arguments, 0) : [];
      indices = [];
      for (m = 0, len1 = names.length; m < len1; m++) {
        name = names[m];
        indices.push(this.nameToIdx(name));
      }
      this.cols = (function() {
        var len2, o, ref, results;
        ref = this.cols;
        results = [];
        for (i = o = 0, len2 = ref.length; o < len2; i = ++o) {
          col = ref[i];
          if (indexOf.call(indices, i) < 0) {
            results.push(col);
          }
        }
        return results;
      }).call(this);
      this._updateData();
      return this;
    };

    Schema.prototype.deleteColumns = function() {
      return this.deleteColumn.apply(this, arguments);
    };

    Schema.prototype.renameColumn = function(oldName, newName) {
      this.cols[this.nameToIdx(oldName)].name = newName;
      this._updateData();
      return this;
    };

    Schema.prototype.changeColumn = function(name, type) {
      this.cols[this.nameToIdx(name)].type = type;
      this._updateData();
      return this;
    };

    renameColumn = function(oldName, newName) {
      this.schema.renameColumn(oldName, newName);
      return this;
    };

    Schema.prototype.equals = function(schema) {
      var i, l, m, n1, n2, ref, t1, t2;
      if ((l = this.cols.length) === schema.cols.length) {
        n1 = this.names;
        n2 = schema.names;
        t1 = this.types;
        t2 = schema.types;
        for (i = m = 0, ref = l; 0 <= ref ? m < ref : m > ref; i = 0 <= ref ? ++m : --m) {
          if (n1[i] !== n2[i] || t1[i] !== t2[i]) {
            return false;
          }
        }
        return true;
      }
      return false;
    };

    Schema.prototype.at = function(param) {
      var idx;
      if (typeof param === "string") {
        idx = this.nameToIdx(param);
      } else {
        idx = param;
      }
      return this.cols[idx] || null;
    };

    Schema.prototype.nameToIdx = function(name) {
      return this.names.indexOf(name);
    };

    Schema.prototype.idxToName = function(idx) {
      return this.names[idx];
    };

    return Schema;

  })();


  /*
  update, set
  insert (into)
  distinct
  functions: avg, sum, count, max, min, first, last
   */

  JQL.Table = (function() {
    var alter, method, name;

    Table.sqlToJsType = {
      varchar: "string",
      char: "string",
      int: "number",
      decimal: "number",
      date: "date"
    };

    Table.typeConversion = {
      strToNum: function(str) {
        return parseFloat(str);
      },
      numToStr: function(num) {
        return "" + num;
      },
      numToDat: function(num) {
        return new Date(num);
      },
      datToNum: function(date) {
        return date.getTime();
      },
      strToDat: function(str) {
        var d, data, i, len1, lookupTable, m;
        str = str.split(/\D/g);
        data = [];
        for (i = m = 0, len1 = str.length; m < len1; i = ++m) {
          d = str[i];
          d = parseInt(d, 10);
          if (i === 1) {
            d--;
          }
          data.push(d);
        }
        lookupTable = [
          null, function(args) {
            return new Date(args[0]);
          }, function(args) {
            return new Date(args[0], args[1]);
          }, function(args) {
            return new Date(args[0], args[1], args[2]);
          }, function(args) {
            return new Date(args[0], args[1], args[2], args[3]);
          }, function(args) {
            return new Date(args[0], args[1], args[2], args[3], args[4]);
          }, function(args) {
            return new Date(args[0], args[1], args[2], args[3], args[4], args[5]);
          }
        ];
        return lookupTable[data.length](data);
      },
      datToStr: function(date) {
        return (date.getFullYear()) + "-" + (padNum(date.getMonth() + 1, 2)) + "-" + (padNum(date.getDate(), 2)) + " " + (padNum(date.getHours(), 2)) + ":" + (padNum(date.getMinutes(), 2)) + ":" + (padNum(date.getSeconds(), 2));
      }
    };

    Table["new"] = function(schema, records) {
      return new JQL.Table(schema, records);
    };

    Table["new"].fromJSON = function(json, name) {
      var col, len1, len2, m, o, r, record, records, ref, schema, table;
      if (!(json instanceof Array)) {
        return null;
      }
      schema = new JQL.Schema(null, json[0]);
      records = [];
      for (m = 0, len1 = json.length; m < len1; m++) {
        record = json[m];
        r = [];
        ref = schema.cols;
        for (o = 0, len2 = ref.length; o < len2; o++) {
          col = ref[o];
          r.push(record[col.name]);
        }
        records.push(r);
      }
      table = new JQL.Table(schema, records, name, null);
      schema.table = table;
      return table;
    };

    Table["new"].fromRowJSON = Table["new"].fromJSON;

    Table["new"].fromColJSON = function() {
      var col, cols, i, len1, m, maxColLength, o, pseudoRecord, records, ref;
      cols = 1 <= arguments.length ? slice.call(arguments, 0) : [];
      if (cols[0] instanceof Array) {
        cols = cols[0];
      }
      pseudoRecord = {};
      maxColLength = 0;
      for (m = 0, len1 = cols.length; m < len1; m++) {
        col = cols[m];
        pseudoRecord[col.name] = col.type || typeof col.vals[0];
        if (col.vals.length > maxColLength) {
          maxColLength = col.vals.length;
        }
      }
      records = [];
      for (i = o = 0, ref = maxColLength; 0 <= ref ? o < ref : o > ref; i = 0 <= ref ? ++o : --o) {
        records.push((function() {
          var len2, p, results;
          results = [];
          for (p = 0, len2 = cols.length; p < len2; p++) {
            col = cols[p];
            results.push(col.vals[i] || null);
          }
          return results;
        })());
      }
      return new JQL.Table(new JQL.Schema(this, pseudoRecord, true), records);
    };

    Table["new"].fromSQL = function(sql) {
      var autoIncrements, col, colDef, colDefRegex, colName, createTableRegex, i, info, insertRegex, len1, len2, len3, len4, len5, m, match, matches, name, notNulls, o, options, p, primareKeyRegex, primaryKeys, pseudoRecord, q, records, s, schema, table, tableData, tables, type, value, values;
      sql = sql.replace(/\`/g, "");
      createTableRegex = /CREATE\s+TABLE\s+(\w+)\s*\(\s*(\w+)\s+(\w+)\s*(\(\s*(\w+)(\s*,\s*(\w+))*\s*\))?\s*((\w+)\s+)*(\w+)?(\s*,\s*(\w+)\s+(\w+)\s*(\(\s*(\w+)(\s*,\s*(\w+))*\s*\))?\s*((\w+)\s+)*(\w+)?)*\)/gi;
      colDefRegex = /(\w+)\s+(\w+)\s*(\(\s*\w+(\s*,\s*\w+)*\s*\))?\s*((\w+)\s+)*(\w+)?/gi;
      primareKeyRegex = /PRIMARY\s+KEY\s*\(\s*\w+(\s*,\s*\w+)*\s*\)/gi;
      insertRegex = /INSERT INTO\s+(\w+)\s*(\(\w+(\s*,\s*\w+)*\)\s+)?(VALUES\s+\((\w+|\d+|'\w+')(\s*,\s*(\w+|\d+|'\w+'))*\)(\s*,\s*\((\w+|\d+|'\w+')(\s*,\s*(\w+|\d+|'\w+'))*\))*)/gi;
      if ((matches = sql.match(createTableRegex)) != null) {
        tables = {};
        for (m = 0, len1 = matches.length; m < len1; m++) {
          match = matches[m];
          info = createTableRegex.exec(match);
          createTableRegex.lastIndex = 0;
          name = info[1];
          tableData = match.slice(match.indexOf("(") + 1, -1).trim().replace(/\n/g, "").replace(/\s+/g, " ").split(/\s*\,(?![^\(]*\))\s*/g);
          pseudoRecord = {};
          notNulls = [];
          autoIncrements = [];
          primaryKeys = [];
          for (o = 0, len2 = tableData.length; o < len2; o++) {
            colDef = tableData[o];
            if (!colDef.match(primareKeyRegex)) {
              colDef = colDef.replace(/\(\s*\w+(\s*,\s*\w+)*\s*\)/g, "").replace(/NOT\s+NULL/gi, "notnull").replace(/AUTO_INCREMENT/gi, "autoincrement").replace(/UNSIGNED/gi, "").split(/\s+/g);
              colName = colDef[0];
              type = JQL.Table.sqlToJsType[colDef[1].toLowerCase()];
              options = colDef.slice(2);
              pseudoRecord[colName] = type;
              if (indexOf.call(options, "notnull") >= 0) {
                notNulls.push(colName);
              }
              if (indexOf.call(options, "autoincrement") >= 0) {
                autoIncrements.push(colName);
              }
            } else {
              colDef = colDef.replace(/PRIMARY\s+KEY\s*\((.*)\)/gi, "$1").split(/\s*,\s*/g);
              for (p = 0, len3 = colDef.length; p < len3; p++) {
                col = colDef[p];
                primaryKeys.push(col.trim());
              }
            }
          }
          schema = new JQL.Schema(this, pseudoRecord, true);
          if (notNulls.length > 0) {
            schema.setNotNulls(notNulls);
          }
          if (autoIncrements.length > 0) {
            schema.setAutoIncrements(autoIncrements);
          }
          tables[name] = new JQL.Table(schema, [], name);
        }
        if ((matches = sql.match(insertRegex)) != null) {
          for (q = 0, len4 = matches.length; q < len4; q++) {
            match = matches[q];
            info = insertRegex.exec(match);
            insertRegex.lastIndex = 0;
            name = info[1];
            values = info[4];
            values = values.slice(values.indexOf("(")).split(/\s*\,(?![^\(]*\))\s*/g);
            if ((table = tables[name]) != null) {
              records = [];
              for (i = s = 0, len5 = values.length; s < len5; i = ++s) {
                value = values[i];
                value = value.replace(/\s+/g, "").slice(value.indexOf("(") + 1, value.indexOf(")")).split(/\s*,\s*/g);
                records.push(value);
              }
              table.insert(records);
            } else {
              console.warn("Table '" + name + "' does not exist! Create (first) with CREATE TABLE!");
            }
          }
        }
        console.log(tables);
        return tables;
      }
      console.warn("SQL statement somehow invalid (back ticks erased already):", sql);
      return null;
    };

    Table["new"].fromTable = function(table) {
      var record;
      return new JQL.Table(table.schema.clone(), (function() {
        var len1, m, ref, results;
        ref = table.records;
        results = [];
        for (m = 0, len1 = ref.length; m < len1; m++) {
          record = ref[m];
          results.push(record.slice(0));
        }
        return results;
      })());
    };

    function Table(schema, records, name, partOf) {
      var col, i, len1, m, pseudoRecord, type;
      if (name == null) {
        name = "Table";
      }
      if (partOf == null) {
        partOf = null;
      }
      if (schema instanceof JQL.Schema) {
        this.schema = schema;
        schema.table = this;
        this.records = records || [];
        this.name = name;
        this.partOf = partOf;
      } else {
        pseudoRecord = {};
        if (schema instanceof Array) {
          for (i = m = 0, len1 = schema.length; m < len1; i = m += 2) {
            col = schema[i];
            type = schema[i + 1];
            pseudoRecord[col] = type;
          }
        } else if (arguments.length === 1) {
          pseudoRecord = schema;
        } else {
          console.warn("JQL.Table::constructor: invalid arguments passed:", arguments);
        }
        this.schema = new JQL.Schema(this, pseudoRecord, true);
        this.records = [];
        this.name = "Table";
        this.partOf = null;
      }
      this.history = [];
      Object.defineProperties(this, {
        update: {
          get: getSelf,
          set: getSelf
        }
      });
    }

    Table.prototype.clone = function() {
      return JQL.Table["new"].fromTable(this);
    };

    Table.prototype.at = function(row, colName) {
      var ref;
      if (colName == null) {
        colName = row;
        row = 0;
      }
      return ((ref = this.records[row]) != null ? ref[this.schema.nameToIdx(colName)] : void 0) || void 0;
    };

    Table.prototype.row = function(n) {
      return new JQL.Table(this.schema, [this.records[n]], this.name, this);
    };

    Table.prototype.first = function() {
      return this.row(0);
    };

    Table.prototype.firstRaw = function() {
      return this.records[0];
    };

    Table.prototype.last = function() {
      return this.row(this.records.length - 1);
    };

    Table.prototype.lastRaw = function() {
      return this.record[this.records.length - 1];
    };

    Table.prototype.col = function(n) {
      var record;
      if (typeof n === "string") {
        n = this.schema.nameToIdx(n);
      }
      return (function() {
        var len1, m, ref, results;
        ref = this.records;
        results = [];
        for (m = 0, len1 = ref.length; m < len1; m++) {
          record = ref[m];
          results.push(record[n]);
        }
        return results;
      }).call(this);
    };

    Table.prototype.select = function() {
      var alias, c, col, cols, i, len1, len2, m, o, parts, record, records, ref, schema;
      cols = 1 <= arguments.length ? slice.call(arguments, 0) : [];
      if ((cols == null) || cols[0] === "*") {
        return this.clone();
      }
      schema = this.schema;
      records = [];
      ref = this.records;
      for (m = 0, len1 = ref.length; m < len1; m++) {
        record = ref[m];
        records.push((function() {
          var len2, o, results;
          results = [];
          for (o = 0, len2 = cols.length; o < len2; o++) {
            col = cols[o];
            results.push(record[schema.nameToIdx(col)]);
          }
          return results;
        })());
      }
      schema = new JQL.Schema();
      for (i = o = 0, len2 = cols.length; o < len2; i = ++o) {
        col = cols[i];
        if (col.toLowerCase().indexOf(" as ")) {
          parts = col.split(/\s+as\s+/i);
          col = parts[0];
          alias = parts[1];
        }
        c = this.schema.cols[this.schema.nameToIdx(col)];
        c.index = i;
        if (alias != null) {
          c.name = alias;
        }
        schema.cols.push(c);
      }
      schema._updateData();
      return new JQL.Table(schema, records, this.name + ".select", this);
    };

    Table.prototype.project = function() {
      return this.select.apply(this, arguments);
    };

    Table.prototype.count = function(col) {
      var idx, len1, m, num, record, ref;
      if (col === "*" || (col == null)) {
        return this.records.length;
      }
      num = 0;
      idx = this.schema.nameToIdx(col);
      ref = this.records;
      for (m = 0, len1 = ref.length; m < len1; m++) {
        record = ref[m];
        if (record[idx] != null) {
          num++;
        }
      }
      return num;
    };

    Table.prototype.merge = function(table) {
      if (this.schema.equals(table.schema)) {
        return new JQL.Table(this.schema.clone(), arrUnique(this.records.concat(table.records)), this.name);
      }
      console.warn("JQL::merge: schema of given table does not match schema of this table! Returning this table.");
      return this;
    };

    Table.prototype.where = function(predicate) {
      var check, len1, m, map, pool, record, records, ref, schema, self;
      if (predicate instanceof Function) {
        ref = this.records;
        for (m = 0, len1 = ref.length; m < len1; m++) {
          record = ref[m];
          if (predicate(record)) {
            return record;
          }
        }
      }
      schema = this.schema;
      records = this.records;
      map = schema.nameToIdx.bind(schema);
      pool = {
        isnt: function(predicate, record) {
          var key, val;
          for (key in predicate) {
            val = predicate[key];
            if (record[map(key)] === val) {
              return false;
            }
          }
          return true;
        },
        is: function(predicate, record) {
          var key, val;
          for (key in predicate) {
            val = predicate[key];
            if (record[map(key)] !== val) {
              return false;
            }
          }
          return true;
        },
        lt: function(predicate, record) {
          var key, val;
          for (key in predicate) {
            val = predicate[key];
            if (record[map(key)] >= val) {
              return false;
            }
          }
          return true;
        },
        gt: function(predicate, record) {
          var key, val;
          for (key in predicate) {
            val = predicate[key];
            if (record[map(key)] <= val) {
              return false;
            }
          }
          return true;
        },
        lte: function(predicate, record) {
          var key, val;
          for (key in predicate) {
            val = predicate[key];
            if (record[map(key)] > val) {
              return false;
            }
          }
          return true;
        },
        gte: function(predicate, record) {
          var key, val;
          for (key in predicate) {
            val = predicate[key];
            if (record[map(key)] < val) {
              return false;
            }
          }
          return true;
        }
      };
      self = this;
      check = function(predicate, record) {
        var key, val;
        for (key in predicate) {
          val = predicate[key];
          if (indexOf.call(schema.names, key) >= 0) {
            if (record[map(key)] !== val) {
              return false;
            }
          } else if ((pool[key] != null) && !pool[key](val, record)) {
            return false;
          }
        }
        return true;
      };
      return new JQL.Table(this.schema.clone(), (function() {
        var len2, o, results;
        results = [];
        for (o = 0, len2 = records.length; o < len2; o++) {
          record = records[o];
          if (check(predicate, record)) {
            results.push(record);
          }
        }
        return results;
      })(), this.name, this);
    };

    alter = function() {
      return this;
    };

    alter.addColumn = function(col) {
      var len1, m, record, ref;
      if (col.notNull === true && !col.initVal) {
        console.warn("Can't add NOT NULL column if no initial value is given!");
        return this;
      }
      this.schema.addColumn(col);
      ref = this.records;
      for (m = 0, len1 = ref.length; m < len1; m++) {
        record = ref[m];
        record.push(col.initVal || null);
      }
      return this;
    };

    alter.deleteColumn = function(colName) {
      var col, i, idx, j, len1, m, record, ref;
      idx = this.schema.nameToIdx(colName);
      this.schema.deleteColumn(colName);
      ref = this.records;
      for (i = m = 0, len1 = ref.length; m < len1; i = ++m) {
        record = ref[i];
        this.records[i] = (function() {
          var len2, o, results;
          results = [];
          for (j = o = 0, len2 = record.length; o < len2; j = ++o) {
            col = record[j];
            if (j !== idx) {
              results.push(col);
            }
          }
          return results;
        })();
      }
      return this;
    };

    alter.dropColumn = function() {
      return this.alter.deleteColumn.apply(this, arguments);
    };

    alter.changeColumn = function(name, type) {
      this.schema.changeColumn(name, type);
      return this;
    };

    alter.changeColumnType = function() {
      return this.alter.changeColumn.apply(this, arguments);
    };

    alter.renameColumn = function(oldName, newName) {
      this.schema.renameColumn(oldName, newName);
      return this;
    };

    alter.changeColumnName = function() {
      return this.alter.renameColumn.apply(this, arguments);
    };

    Table.prototype.alter = alter;

    for (name in alter) {
      method = alter[name];
      Table.prototype[name] = method;
    }

    Table.prototype.rename = function(name) {
      this.name = "" + name;
      return this;
    };

    Table.prototype.and = function(predicate) {
      if (predicate == null) {
        return this;
      }
      return this.where(predicate);
    };

    Table.prototype.or = function(predicate) {
      if (predicate == null) {
        return this.partOf;
      }
      return this.merge(this.partOf.where(predicate));
    };

    Table.prototype.innerJoin = function(table, leftCol, rightCol) {
      var leftRecord, leftSchema, len1, len2, m, o, records, ref, ref1, rightRecord, rightSchema;
      if (!rightCol) {
        rightCol = leftCol;
      }
      records = [];
      leftSchema = this.schema;
      rightSchema = table.schema;
      ref = this.records;
      for (m = 0, len1 = ref.length; m < len1; m++) {
        leftRecord = ref[m];
        ref1 = table.records;
        for (o = 0, len2 = ref1.length; o < len2; o++) {
          rightRecord = ref1[o];
          if (leftRecord[leftSchema.nameToIdx(leftCol)] === rightRecord[rightSchema.nameToIdx(rightCol)]) {
            records.push(leftRecord.concat(rightRecord));
          }
        }
      }
      return new JQL.Table(leftSchema.concat(rightSchema), records);
    };

    Table.prototype.leftJoin = function(table, leftCol, rightCol) {
      var i, leftRecord, leftSchema, len1, len2, m, matchFound, nullArray, o, records, ref, ref1, rightRecord, rightSchema;
      if (!rightCol) {
        rightCol = leftCol;
      }
      records = [];
      leftSchema = this.schema;
      rightSchema = table.schema;
      nullArray = (function() {
        var m, ref, results;
        results = [];
        for (i = m = 0, ref = rightSchema.cols.length; 0 <= ref ? m < ref : m > ref; i = 0 <= ref ? ++m : --m) {
          results.push(null);
        }
        return results;
      })();
      ref = this.records;
      for (m = 0, len1 = ref.length; m < len1; m++) {
        leftRecord = ref[m];
        matchFound = false;
        ref1 = table.records;
        for (o = 0, len2 = ref1.length; o < len2; o++) {
          rightRecord = ref1[o];
          if (leftRecord[leftSchema.nameToIdx(leftCol)] === rightRecord[rightSchema.nameToIdx(rightCol)]) {
            records.push(leftRecord.concat(rightRecord));
            matchFound = true;
          }
        }
        if (!matchFound) {
          records.push(leftRecord.concat(nullArray));
        }
      }
      return new JQL.Table(leftSchema.concat(rightSchema), records);
    };

    Table.prototype.rightJoin = function(table, leftCol, rightCol) {
      return table.leftJoin(this, rightCol, leftCol);
    };

    Table.prototype.fullOuterJoin = function(table, leftCol, rightCol) {};

    Table.prototype.join = function(table, leftCol, rightCol, type) {
      var map, name1;
      if (type == null) {
        type = "inner";
      }
      if (arguments.length === 3) {
        return this.innerJoin(table, leftCol, rightCol);
      }
      type = ("" + type).toLowerCase();
      map = {
        fullOuter: this.fullOuterJoin,
        inner: this.innerJoin,
        left: this.leftJoin,
        leftOuter: this.leftJoin,
        outer: this.outerJoin,
        right: this.rightJoin,
        rightOuter: this.rightJoin
      };
      return (typeof this[name1 = map[type]] === "function" ? this[name1](table, leftCol, rightCol) : void 0) || this.innerJoin(table, leftCol, rightCol);
    };

    Table.prototype.equals = function(table) {
      var doneIndices, i, j, len1, len2, m, o, rRecord, record, ref, ref1;
      if (this.schema.equals(table.schema)) {
        if (this.records.length !== table.records.length) {
          return false;
        }
        doneIndices = [];
        ref = table.records;
        for (i = m = 0, len1 = ref.length; m < len1; i = ++m) {
          record = ref[i];
          ref1 = this.records;
          for (j = o = 0, len2 = ref1.length; o < len2; j = ++o) {
            rRecord = ref1[j];
            if (indexOf.call(doneIndices, j) < 0 && arrEquals(record, rRecord)) {
              doneIndices.push(j);
            }
          }
        }
        return doneIndices.length === this.records.length;
      }
      return false;
    };

    Table.prototype.set = function() {};

    Table.prototype.unique = function() {
      return new JQL.Table(this.schema.clone(), arrUnique(this.records));
    };

    Table.prototype.distinct = function() {
      return this.unique.apply(this, arguments);
    };

    Table.prototype.groupBy = function(col, aggregation, alias) {
      var aggrVals, dict, groupByCol, key, len1, len2, m, o, record, recordDict, ref, ref1, schema, val;
      dict = {};
      if (aggregation instanceof Function && typeof aggregation.column === "string") {
        recordDict = {};
        schema = this.schema.clone();
        ref = this.records;
        for (m = 0, len1 = ref.length; m < len1; m++) {
          record = ref[m];
          val = record[schema.nameToIdx(col)];
          if (dict[val] == null) {
            dict[val] = [record[schema.nameToIdx(aggregation.column)]];
            recordDict[val] = record.slice(0);
          } else {
            dict[val].push(record[schema.nameToIdx(aggregation.column)]);
          }
        }
        for (groupByCol in dict) {
          aggrVals = dict[groupByCol];
          dict[groupByCol] = aggregation.call(this, aggrVals);
        }
        for (key in dict) {
          val = dict[key];
          recordDict[key].push(val);
        }
        console.log(dict);
        console.log(recordDict);
        schema.cols.push({
          name: aggregation.name || alias || "aggregation",
          type: aggregation.type(),
          index: schema.cols.length
        });
        schema._updateData();
        return new JQL.Table(schema, (function() {
          var results;
          results = [];
          for (key in recordDict) {
            record = recordDict[key];
            results.push(record);
          }
          return results;
        })());
      }
      ref1 = this.records;
      for (o = 0, len2 = ref1.length; o < len2; o++) {
        record = ref1[o];
        val = record[this.schema.nameToIdx(col)];
        if (dict[val] == null) {
          dict[val] = record;
        }
      }
      return new JQL.Table(this.schema.clone(), (function() {
        var results;
        results = [];
        for (key in dict) {
          record = dict[key];
          results.push(record);
        }
        return results;
      })());
    };

    Table.prototype.orderBy = function() {
      var cols, schema;
      cols = 1 <= arguments.length ? slice.call(arguments, 0) : [];
      if (cols[0] instanceof Array) {
        cols = cols[0];
      }
      schema = this.schema;
      this.records.sort(function(r1, r2) {
        var col, idx, len1, m;
        for (m = 0, len1 = cols.length; m < len1; m++) {
          col = cols[m];
          idx = schema.nameToIdx(col);
          if (r1[idx] < r2[idx]) {
            return -1;
          }
          if (r1[idx] > r2[idx]) {
            return 1;
          }
        }
        return 0;
      });
      return this;
    };

    Table.prototype.insert = function() {
      var col, funcName, i, len1, len2, len3, m, o, p, r, record, records, ref, type, types;
      records = 1 <= arguments.length ? slice.call(arguments, 0) : [];
      if (records instanceof Array && records[0] instanceof Array && records[0][0] instanceof Array) {
        records = records[0];
      }
      for (m = 0, len1 = records.length; m < len1; m++) {
        record = records[m];
        types = this.schema.types;
        if (record instanceof Array) {
          for (i = o = 0, len2 = record.length; o < len2; i = ++o) {
            col = record[i];
            if (!(typeof col !== types[i])) {
              continue;
            }
            type = types[i];
            funcName = ((typeof col).slice(0, 3)) + "To" + (type[0].toUpperCase()) + (type.slice(1, 3));
            record[i] = JQL.Table.typeConversion[funcName](col);
            console.warn("JQL.Table::insert: type of '" + col + "' (" + (typeof col) + ", " + (i + 1) + "th column) does not match '" + type + "'. Converting to '" + record[i] + "' (type: '" + type + "').");
          }
          this.records.push(record);
        } else {
          r = [];
          ref = this.schema.names;
          for (p = 0, len3 = ref.length; p < len3; p++) {
            name = ref[p];
            r.push(record[name]);
          }
          this.records.push(r);
        }
      }
      return this;
    };

    Table.prototype["delete"] = function(param) {
      var child, childRecord, i, incidesToRemove, len1, len2, m, o, record, ref, ref1, ref2;
      if (param instanceof JQL.Table) {
        child = param;
        incidesToRemove = [];
        ref = param.records;
        for (m = 0, len1 = ref.length; m < len1; m++) {
          childRecord = ref[m];
          ref1 = this.records;
          for (i = o = 0, len2 = ref1.length; o < len2; i = ++o) {
            record = ref1[i];
            if (!(arrEquals(childRecord, record))) {
              continue;
            }
            incidesToRemove.push(i);
            break;
          }
        }
        this.records = (function() {
          var len3, p, ref2, results;
          ref2 = this.records;
          results = [];
          for (i = p = 0, len3 = ref2.length; p < len3; i = ++p) {
            record = ref2[i];
            if (indexOf.call(incidesToRemove, i) < 0) {
              results.push(record);
            }
          }
          return results;
        }).call(this);
      } else if (param != null) {
        this["delete"](this.where(param.where || predicate));
      } else {
        if ((ref2 = this.partOf) != null) {
          ref2["delete"](this);
        }
      }
      return this;
    };

    Table.prototype["delete"].where = function() {
      return this["delete"].apply(this, arguments);
    };

    Table.prototype.each = function(callback) {
      var i, len1, m, record, ref;
      ref = this.records;
      for (i = m = 0, len1 = ref.length; m < len1; i = ++m) {
        record = ref[i];
        if (callback(record, i) === false) {
          break;
        }
      }
      return this;
    };

    Table.prototype.each2 = function(callback) {
      var col, i, j, len1, len2, m, o, r, record, ref, ref1;
      ref = this.records;
      for (i = m = 0, len1 = ref.length; m < len1; i = ++m) {
        record = ref[i];
        r = {};
        ref1 = this.schema.names;
        for (j = o = 0, len2 = ref1.length; o < len2; j = ++o) {
          col = ref1[j];
          r[col] = record[j];
        }
        if (callback(r, i) === false) {
          break;
        }
      }
      return this;
    };

    Table.prototype.each3 = function(callback) {
      var col, i, j, len1, len2, m, o, r, record, ref, ref1;
      ref = this.records;
      for (i = m = 0, len1 = ref.length; m < len1; i = ++m) {
        record = ref[i];
        r = [];
        ref1 = this.schema.cols;
        for (j = o = 0, len2 = ref1.length; o < len2; j = ++o) {
          col = ref1[j];
          r[j] = record[col.index];
        }
        r.unshift(i);
        if (callback.apply(r, r) === false) {
          break;
        }
      }
      return this;
    };

    Table.prototype.toJSON = function() {
      var col, i, len1, len2, m, map, o, obj, record, ref, ref1, res;
      res = [];
      map = this.schema.idxToName.bind(this.schema);
      ref = this.records;
      for (m = 0, len1 = ref.length; m < len1; m++) {
        record = ref[m];
        obj = {};
        ref1 = this.schema.cols;
        for (i = o = 0, len2 = ref1.length; o < len2; i = ++o) {
          col = ref1[i];
          obj[map(i)] = record[i];
        }
        res.push(obj);
      }
      return res;
    };

    Table.prototype.toSelectSQL = function() {};

    Table.prototype.toSQL = function() {};

    return Table;

  })();

  JQL["new"] = JQL.Table["new"];

  JQL.fromColJSON = JQL["new"].fromColJSON;

  JQL.fromJSON = JQL["new"].fromJSON;

  JQL.fromSQL = JQL["new"].fromSQL;

  JQL.SUM = JQL.sum;

  describe("miscellaneous", function() {
    var loadingTime, records, schema, start, table;
    start = Date.now();
    table = JQL.fromJSON(bigJSON, "bigTable");
    loadingTime = Date.now() - start;
    console.log(loadingTime + " ms,", table);
    schema = table.schema;
    records = table.records;
    it("loading big data", function() {
      return expect(loadingTime).toBeLessThan(500);
    });
    it("arrEquals", function() {
      var arr1, arr2, arr3;
      arr1 = [1, true, "asdf", [1, 2, 3], 4];
      arr2 = [1, true, "asdf", [1, 2, 3], 4];
      arr3 = [[1, 2], [3, 4]];
      expect(arrEquals(arr1, arr2)).toBe(true);
      return expect(arrEquals(arr1, arr3)).toBe(false);
    });
    return it("padNum", function() {
      expect(padNum(3, 2)).toBe("03");
      expect(padNum("03", 3)).toBe("003");
      expect(padNum("33", 2)).toBe("33");
      expect(padNum("33", 1)).toBe("33");
      expect(padNum(333, 5)).toBe("00333");
      expect(padNum(33.34, 5)).toBe("00033.34");
      expect(padNum("33.34", 5)).toBe("00033.34");
      expect(padNum(33.345, 2)).toBe("33.345");
      return expect(padNum(33.345, 1)).toBe("33.345");
    });
  });

  describe("JQL.Schema", function() {
    var records, schema, table;
    table = JQL.fromJSON(bigJSON, "bigTable");
    schema = table.schema;
    records = table.records;
    it("clone and equals", function() {
      return expect(schema.clone().equals(schema)).toBe(true);
    });
    it("addColumn and query new column", function() {
      var callback, oldNames;
      oldNames = schema.names;
      expect(schema.addColumn({
        name: "testColumn",
        type: "number"
      }).names).toEqual(oldNames.concat(["testColumn"]));
      expect(table.where({
        id: 692
      }).select("testColumn").col("testColumn")).toEqual([null]);
      schema.addColumn({
        name: "testColumn2",
        type: "number",
        initValue: 4
      });
      expect(table.where({
        id: 692
      }).select("testColumn2").col("testColumn2")).toEqual([4]);
      schema.addColumn({
        name: "testColumn3",
        type: "number",
        initValue: "non-valid-value"
      });
      expect(table.where({
        id: 692
      }).select("testColumn3").col("testColumn3")).toEqual([null]);
      callback = function() {
        var error;
        try {
          expect(records[records.length - 1].length).toBe(13);
        } catch (_error) {
          error = _error;
          console.warn(error.message);
        }
        console.log("async done.....");
        return true;
      };
      schema.addColumn({
        name: "testColumn4",
        type: "number"
      }, true, callback);
      console.log("async starting....");
      return expect(records[records.length - 1].length).toBe(12);
    });
    return it("deleteColumn", function() {
      var name, names;
      names = (function() {
        var len1, m, ref, results;
        ref = schema.names;
        results = [];
        for (m = 0, len1 = ref.length; m < len1; m++) {
          name = ref[m];
          if (name !== "testColumn" && name !== "testColumn2") {
            results.push(name);
          }
        }
        return results;
      })();
      expect(schema.deleteColumns("testColumn", "testColumn2").names).toEqual(names);
      expect(schema.at("testColumn")).toBe(null);
      return expect(table.records[0].length).toBe(12);
    });
  });

  describe("JQL.Table", function() {
    var records, schema, table;
    table = JQL.fromJSON(bigJSON, "bigTable");
    schema = table.schema;
    records = table.records;
    it("fromJSON", function() {
      expect(schema).toBe(table.schema);
      expect(table).toBe(schema.table);
      return expect(table.name).toBe("bigTable");
    });
    it("fromColJSON", function() {
      var colJson, table2;
      colJson = [
        {
          name: "col1",
          type: "testType",
          vals: ["val11", "val12"]
        }, {
          name: "col2",
          vals: [1, 2]
        }
      ];
      table2 = JQL.fromColJSON(colJson);
      expect(table2.schema.names).toEqual(["col1", "col2"]);
      expect(table2.schema.types).toEqual(["testType", "number"]);
      return expect(table2.records[0]).toEqual(["val11", 1]);
    });
    it("fromSQL", function() {
      var table2;
      table2 = JQL["new"].fromSQL("CREATE TABLE users (\n    id INT(8) UNSIGNED NOT NULL AUTO_INCREMENT,\n    username VARCHAR(16) NOT NULL,\n    password DECIMAL (18, 2) NOT NULL,\n    PRIMARY KEY ( id,b)\n);\nINSERT INTO users VALUES (1,2,3), (4,5,6);");
      expect(Object.keys(table2)).toEqual(["users"]);
      table2 = table2.users;
      expect(table2.name).toBe("users");
      expect(table2.schema.names).toEqual(["id", "username", "password"]);
      return expect(table2.records).toEqual([[1, "2", 3], [4, "5", 6]]);
    });
    it("fromTable/clone", function() {
      var clone;
      clone = table.clone();
      expect(clone.records.length).toBe(table.records.length);
      return expect(clone.schema.names).toEqual(table.schema.names);
    });
    it("constructor", function() {
      var t1, t2;
      t1 = new JQL.Table(["id", "number", "text", "string", "img", "string"]);
      t2 = new JQL.Table({
        id: "number",
        text: "string",
        img: "string"
      });
      return expect(t1.schema.cols).toEqual(t2.schema.cols);
    });
    it("type conversion", function() {
      var funcSet;
      funcSet = JQL.Table.typeConversion;
      expect(funcSet.datToStr(new Date("2015-02-02"))).toBe("2015-02-02 01:00:00");
      expect(funcSet.strToDat("2015-02-02").getTime()).toBe((new Date(2015, 1, 2)).getTime());
      expect(funcSet.strToNum(funcSet.numToStr(123.456))).toBe(123.456);
      return expect(funcSet.datToNum(funcSet.numToDat(1427040298501))).toBe(1427040298501);
    });
    it("row", function() {
      return expect(table.row(0).records[0]).toEqual([375, "2012-01-01", 95800, "2013-06-06 15:24:35", "2014-01-06 17:36:02", null, null, 1, null]);
    });
    it("col", function() {
      var rec;
      return expect(table.col("id")).toEqual((function() {
        var len1, m, results;
        results = [];
        for (m = 0, len1 = bigJSON.length; m < len1; m++) {
          rec = bigJSON[m];
          results.push(rec.id);
        }
        return results;
      })());
    });
    it("firstRaw", function() {
      return expect(table.firstRaw()).toEqual([375, "2012-01-01", 95800, "2013-06-06 15:24:35", "2014-01-06 17:36:02", null, null, 1, null]);
    });
    it("toJSON", function() {
      return expect(table.row(0).toJSON()).toEqual([
        {
          "id": 375,
          "date": "2012-01-01",
          "value": 95800,
          "created_at": "2013-06-06 15:24:35",
          "updated_at": "2014-01-06 17:36:02",
          "detail_html": null,
          "detail_pic": null,
          "kpi_report_id": 1,
          "raw_row_number": null
        }
      ]);
    });
    it("where", function() {
      expect(table.where({
        lt: {
          id: 400
        }
      }).records.length).toBe(25);
      expect(table.where({
        gt: {
          id: 694
        }
      }).records.length).toBe(1);
      expect(table.where({
        date: "2012-03-01"
      }).records.length).toBe(21);
      return expect(table.where({
        detail_html: null,
        detail_pic: null
      }).records.length).toBe(304);
    });
    it("select/project", function() {
      var selection;
      selection = table.select("id", "value");
      expect(selection.records[0].length).toBe(2);
      expect(selection.schema.names).toEqual(["id", "value"]);
      selection = table.where({
        id: 375
      }).select("id", "value");
      expect(selection.records.length).toBe(1);
      expect(selection.records[0]).toEqual([375, 95800]);
      expect(selection.at(0, "id")).toEqual(375);
      expect(selection.at("id")).toEqual(375);
      expect(selection.at(0, "value")).toEqual(95800);
      expect(selection.at("value")).toEqual(95800);
      selection = table.where({
        id: 375
      }).select("value", "id");
      expect(selection.records[0]).toEqual([95800, 375]);
      expect(selection.at(0, "id")).toEqual(375);
      expect(selection.at("id")).toEqual(375);
      expect(selection.at(0, "value")).toEqual(95800);
      expect(selection.at("value")).toEqual(95800);
      expect(selection.schema.names).toEqual(["value", "id"]);
      selection = table.select("id AS num", "value as someLabel");
      return expect(selection.schema.names).toEqual(["num", "someLabel"]);
    });
    it("and", function() {
      expect(table.where({
        id: 375
      }).and({
        id: 376
      }).records.length).toBe(0);
      expect(table.where({
        id: 375
      }).and({
        date: "2012-01-01"
      }).records).toEqual([[375, "2012-01-01", 95800, "2013-06-06 15:24:35", "2014-01-06 17:36:02", null, null, 1, null]]);
      return expect(table.where({
        id: 375
      }).and().where({
        date: "2012-01-01"
      }).records).toEqual([[375, "2012-01-01", 95800, "2013-06-06 15:24:35", "2014-01-06 17:36:02", null, null, 1, null]]);
    });
    it("or", function() {
      console.log("or:");
      console.log(table.where({
        id: 375
      }).or({
        id: 376
      }));
      return expect(table.where({
        id: 375
      }).or({
        id: 376
      }).records).toEqual([[375, "2012-01-01", 95800, "2013-06-06 15:24:35", "2014-01-06 17:36:02", null, null, 1, null], [376, "2012-02-01", 90568, "2013-06-06 15:24:35", "2014-01-06 17:36:02", null, null, 1, null]]);
    });
    it("unique/distinct", function() {
      var tempTable;
      tempTable = JQL.fromJSON([
        {
          a: 10,
          b: 10
        }, {
          a: 10,
          b: 20
        }, {
          a: 20,
          b: 10
        }
      ]);
      expect(tempTable.select("a").unique().records).toEqual([[10], [20]]);
      return expect(tempTable.unique().records).toEqual([[10, 10], [10, 20], [20, 10]]);
    });
    it("insert", function() {
      var tempTable;
      tempTable = JQL.fromJSON([
        {
          a: 10,
          b: 10
        }
      ]);
      expect(tempTable.insert([0, 0], [0, 1]).records).toEqual([[10, 10], [0, 0], [0, 1]]);
      expect(tempTable.insert([[1, 0], [1, 1]]).records).toEqual([[10, 10], [0, 0], [0, 1], [1, 0], [1, 1]]);
      return expect(tempTable.insert({
        a: 2,
        b: 0
      }, {
        a: 2,
        b: 1
      }).records).toEqual([[10, 10], [0, 0], [0, 1], [1, 0], [1, 1], [2, 0], [2, 1]]);
    });
    it("join/innerJoin", function() {
      var joined, leftTable, rightTable;
      leftTable = JQL.fromJSON([
        {
          lId: 10,
          b: "asdf"
        }, {
          lId: 20,
          b: "bsdf"
        }, {
          lId: 20,
          b: "csdf"
        }
      ]);
      rightTable = JQL.fromJSON([
        {
          rId: 10,
          c: "10"
        }, {
          rId: 20,
          c: "40"
        }, {
          rId: 10,
          c: "50"
        }
      ]);
      joined = leftTable.join(rightTable, "lId", "rId");
      return expect(joined.records).toEqual([[10, "asdf", 10, "10"], [10, "asdf", 10, "50"], [20, "bsdf", 20, "40"], [20, "csdf", 20, "40"]]);
    });
    it("leftJoin", function() {
      var joined, leftTable, rightTable;
      leftTable = JQL.fromJSON([
        {
          lId: 10,
          b: "asdf"
        }, {
          lId: 20,
          b: "bsdf"
        }, {
          lId: 30,
          b: "csdf"
        }
      ]);
      rightTable = JQL.fromJSON([
        {
          rId: 10,
          c: "10"
        }, {
          rId: 20,
          c: "40"
        }, {
          rId: 10,
          c: "50"
        }
      ]);
      joined = leftTable.leftJoin(rightTable, "lId", "rId");
      return expect(joined.records).toEqual([[10, "asdf", 10, "10"], [10, "asdf", 10, "50"], [20, "bsdf", 20, "40"], [30, "csdf", null, null]]);
    });
    it("rightJoin", function() {});
    it("groupBy", function() {
      return expect(table.groupBy("kpi_report_id", JQL.sum("id")).where({
        kpi_report_id: 1
      }).firstRaw()).toEqual([375, "2012-01-01", 95800, "2013-06-06 15:24:35", "2014-01-06 17:36:02", null, null, 1, null, 5730]);
    });
    it("orderBy", function() {
      var tempTable;
      tempTable = JQL.fromJSON([
        {
          a: 10,
          b: 10,
          c: 10
        }, {
          a: 20,
          b: 20,
          c: 40
        }, {
          a: 20,
          b: 10,
          c: 50
        }
      ]);
      return expect(tempTable.orderBy("a", "b", "c").records).toEqual([[10, 10, 10], [20, 10, 50], [20, 20, 40]]);
    });
    it("each", function() {
      var ids, rec;
      ids = [];
      table.each(function(record, idx) {
        return ids.push(record[0]);
      });
      return expect(ids).toEqual((function() {
        var len1, m, results;
        results = [];
        for (m = 0, len1 = bigJSON.length; m < len1; m++) {
          rec = bigJSON[m];
          results.push(rec.id);
        }
        return results;
      })());
    });
    it("equals", function() {
      return expect(table.equals(JQL.fromJSON(bigJSON))).toBe(true);
    });
    return it("count", function() {
      expect(table.count("*")).toBe(bigJSON.length);
      expect(table.count()).toBe(table.count("*"));
      expect(table.count("raw_row_number")).toBe(1);
      return expect(table.count("id")).toBe(bigJSON.length);
    });
  });

}).call(this);
